{"version":3,"file":"OrdersPage-ClrM0_MY.js","sources":["../../node_modules/lucide-react/dist/esm/icons/funnel.js","../../src/admin/pages/OrdersPage.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.487.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z\",\n      key: \"sc7q7i\"\n    }\n  ]\n];\nconst Funnel = createLucideIcon(\"funnel\", __iconNode);\n\nexport { __iconNode, Funnel as default };\n//# sourceMappingURL=funnel.js.map\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { Search, Filter, Eye, RefreshCw, AlertCircle } from 'lucide-react';\r\nimport { orderService } from '../../api/services';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst AllOrders = () => {\r\n  const { isAuthenticated, user, isAdmin } = useAuth();\r\n  \r\n  // State management\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [orderStatus, setOrderStatus] = useState('successful');\r\n  const [deliveryStatus, setDeliveryStatus] = useState('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  \r\n  const ORDERS_PER_PAGE = 9;\r\n\r\n  // Memoized configurations\r\n  const ORDER_STATUS_OPTIONS = useMemo(() => [\r\n    { value: 'successful', label: 'Successful Orders' },\r\n    { value: 'unsuccessful', label: 'Failed Orders' },\r\n    { value: 'flagged', label: 'Flagged Orders' },\r\n    { value: 'all', label: 'All Payment Status' }\r\n  ], []);\r\n\r\n  const DELIVERY_STATUS_OPTIONS = useMemo(() => [\r\n    { value: 'all', label: 'All Delivery Status' },\r\n    { value: 'delivered', label: 'Delivered' },\r\n    { value: 'in-transit', label: 'In Transit' },\r\n    { value: 'packaged', label: 'Packaged' },\r\n    { value: 'order-received', label: 'Order Received' },\r\n    { value: 'unpaid', label: 'Unpaid' }\r\n  ], []);\r\n\r\n  const DELIVERY_UPDATE_OPTIONS = useMemo(() => [\r\n    { value: 'unpaid', label: 'Unpaid' },\r\n    { value: 'order-received', label: 'Order Received' },\r\n    { value: 'packaged', label: 'Packaged' },\r\n    { value: 'in-transit', label: 'In Transit' },\r\n    { value: 'delivered', label: 'Delivered' }\r\n  ], []);\r\n\r\n  // Utility functions\r\n  const formatCurrency = useCallback((amount) => {\r\n    if (!amount) return '‚Ç¶0';\r\n    return new Intl.NumberFormat('en-NG', {\r\n      style: 'currency',\r\n      currency: 'NGN',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  }, []);\r\n\r\n  const formatDate = useCallback((dateString) => {\r\n    if (!dateString) return 'Unknown';\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('en-GB', {\r\n        day: '2-digit',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    } catch (e) {\r\n      return 'Invalid Date';\r\n    }\r\n  }, []);\r\n\r\n  const getStatusBadgeStyle = useCallback((status) => {\r\n    const statusMap = {\r\n      'successful': 'bg-green-100 text-green-600',\r\n      'delivered': 'bg-green-100 text-green-600',\r\n      'order-received': 'bg-orange-100 text-orange-600',\r\n      'pending': 'bg-orange-100 text-orange-600',\r\n      'packaged': 'bg-blue-100 text-blue-600',\r\n      'in-transit': 'bg-purple-100 text-purple-600',\r\n      'failed': 'bg-red-100 text-red-600',\r\n      'cancelled': 'bg-red-100 text-red-600',\r\n      'unpaid': 'bg-gray-100 text-gray-600'\r\n    };\r\n    return statusMap[status?.toLowerCase()] || 'bg-gray-100 text-gray-600';\r\n  }, []);\r\n\r\n  // Check authentication\r\n  const checkAuth = useCallback(() => {\r\n    if (!isAuthenticated || !user) {\r\n      throw new Error('Admin authentication required to view orders. Please log in as admin.');\r\n    }\r\n    if (!isAdmin) {\r\n      throw new Error('Admin privileges required to view orders.');\r\n    }\r\n  }, [isAuthenticated, user, isAdmin]);\r\n\r\n  // Show notification\r\n  const showNotification = useCallback((type, message) => {\r\n    setNotification({ type, message });\r\n  }, []);\r\n\r\n  // Format order data\r\n  const formatOrderData = useCallback((ordersData) => {\r\n    return ordersData.map(order => ({\r\n      id: order.order_id,\r\n      name: order.name,\r\n      email: order.email,\r\n      phone: order.phone,\r\n      amount: order.amount_paid || order.amount_calculated || 0,\r\n      date: formatDate(order.created_at),\r\n      rawDate: order.created_at,\r\n      orderStatus: order.order_status,\r\n      deliveryStatus: order.delivery_status,\r\n      deliveryMethod: order.delivery_method,\r\n      address: order.street_address ? \r\n        `${order.street_address}, ${order.city}, ${order.state}` : 'Pickup',\r\n      state: order.state,\r\n      city: order.city,\r\n      streetAddress: order.street_address,\r\n      cart: order.cart_obj || [],\r\n      rawData: order\r\n    }));\r\n  }, [formatDate]);\r\n\r\n  // Fetch orders with enhanced error handling\r\n  const fetchOrders = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Check authentication first\r\n      if (!isAuthenticated || !user) {\r\n        throw new Error('Admin authentication required to view orders. Please log in as admin.');\r\n      }\r\n      \r\n      if (!isAdmin) {\r\n        throw new Error('Admin privileges required to view orders.');\r\n      }\r\n      \r\n      console.log('üîÑ Fetching orders with auth check passed');\r\n      \r\n      const filters = {};\r\n      if (orderStatus !== 'all') filters.order_status = orderStatus;\r\n      if (deliveryStatus !== 'all') filters.delivery_status = deliveryStatus;\r\n      filters.limit = 200;\r\n      \r\n      console.log('üì° Calling orderService.fetchOrders with filters:', filters);\r\n      \r\n      const result = await orderService.fetchOrders(filters);\r\n      \r\n      console.log('‚úÖ Orders fetch result:', {\r\n        code: result?.code,\r\n        message: result?.message,\r\n        productsCount: result?.products?.length || 0\r\n      });\r\n      \r\n      if (result?.code === 200) {\r\n        const formattedOrders = formatOrderData(result.orders || []);\r\n        setOrders(formattedOrders);\r\n        console.log(`‚úÖ Successfully loaded ${formattedOrders.length} orders`);\r\n      } else {\r\n        throw new Error(result?.message || 'Failed to fetch orders');\r\n      }\r\n    } catch (err) {\r\n      console.error('‚ùå Error fetching orders:', err);\r\n      \r\n      let errorMessage = 'Failed to load orders';\r\n      \r\n      // Handle specific error types\r\n      if (err.message.includes('CORS')) {\r\n        errorMessage = 'CORS error: The server needs to allow requests from this domain. Please contact your backend administrator.';\r\n      } else if (err.message.includes('Network connection failed') || \r\n                 err.message.includes('Failed to fetch')) {\r\n        errorMessage = 'Network connection failed. Please check your internet connection and ensure the API server is running.';\r\n      } else if (err.message.includes('precondition') || \r\n                 err.message.includes('Unauthorized') || \r\n                 err.message.includes('401')) {\r\n        errorMessage = 'Session expired. Please log in again as admin.';\r\n      } else if (err.message.includes('Authentication') ||\r\n                 err.message.includes('Admin')) {\r\n        errorMessage = err.message;\r\n      } else if (err.message.includes('403')) {\r\n        errorMessage = 'Access forbidden. Admin privileges required.';\r\n      } else if (err.message) {\r\n        errorMessage = err.message;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [orderStatus, deliveryStatus, isAuthenticated, user, isAdmin, formatOrderData]);\r\n\r\n  // Handle delivery status change\r\n  const handleDeliveryStatusChange = useCallback(async (orderId, newStatus) => {\r\n    try {\r\n      setIsUpdating(true);\r\n      checkAuth();\r\n\r\n      console.log('üîÑ Updating delivery status:', { orderId, newStatus });\r\n\r\n      await orderService.changeDeliveryStatus(orderId, newStatus);\r\n      \r\n      // Update local state\r\n      setOrders(prev => prev.map(order => \r\n        order.id === orderId \r\n          ? { ...order, deliveryStatus: newStatus }\r\n          : order\r\n      ));\r\n      \r\n      if (selectedOrder?.id === orderId) {\r\n        setSelectedOrder(prev => ({ ...prev, deliveryStatus: newStatus }));\r\n      }\r\n      \r\n      showNotification('success', `Status updated to \"${newStatus}\" successfully`);\r\n      \r\n    } catch (err) {\r\n      console.error('‚ùå Error updating delivery status:', err);\r\n      \r\n      let errorMessage = 'Failed to update delivery status';\r\n      if (err.message.includes('precondition') || \r\n          err.message.includes('Unauthorized') || \r\n          err.message.includes('Authentication') ||\r\n          err.message.includes('Admin')) {\r\n        errorMessage = 'Admin authentication required. Please ensure you are logged in as an admin.';\r\n      } else if (err.message) {\r\n        errorMessage = err.message;\r\n      }\r\n      \r\n      showNotification('error', errorMessage);\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  }, [checkAuth, selectedOrder, showNotification]);\r\n\r\n  // Filter orders based on search\r\n  const filteredOrders = useMemo(() => {\r\n    if (!searchQuery.trim()) return orders;\r\n    \r\n    const query = searchQuery.toLowerCase();\r\n    return orders.filter(order => \r\n      order.id?.toLowerCase().includes(query) ||\r\n      order.name?.toLowerCase().includes(query) ||\r\n      order.email?.toLowerCase().includes(query) ||\r\n      order.phone?.toLowerCase().includes(query)\r\n    );\r\n  }, [orders, searchQuery]);\r\n\r\n  // Pagination calculations\r\n  const paginationData = useMemo(() => {\r\n    const totalPages = Math.ceil(filteredOrders.length / ORDERS_PER_PAGE);\r\n    const indexOfLastOrder = currentPage * ORDERS_PER_PAGE;\r\n    const indexOfFirstOrder = indexOfLastOrder - ORDERS_PER_PAGE;\r\n    const currentOrders = filteredOrders.slice(indexOfFirstOrder, indexOfLastOrder);\r\n    \r\n    return {\r\n      totalPages,\r\n      indexOfFirstOrder,\r\n      indexOfLastOrder: Math.min(indexOfLastOrder, filteredOrders.length),\r\n      currentOrders\r\n    };\r\n  }, [filteredOrders, currentPage]);\r\n\r\n  // Reset filters\r\n  const resetFilter = useCallback(() => {\r\n    setOrderStatus('successful');\r\n    setDeliveryStatus('all');\r\n    setSearchQuery('');\r\n    setCurrentPage(1);\r\n  }, []);\r\n\r\n  // View order details\r\n  const viewOrderDetails = useCallback((order) => {\r\n    setSelectedOrder(order);\r\n    setShowModal(true);\r\n  }, []);\r\n\r\n  // Auto-dismiss notifications\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => setNotification(null), 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  // Fetch orders on mount and filter changes\r\n  useEffect(() => {\r\n    if (isAuthenticated && user) {\r\n      fetchOrders();\r\n    } else {\r\n      setLoading(false);\r\n      setError('Admin authentication required to view orders. Please log in as admin.');\r\n    }\r\n  }, [fetchOrders, isAuthenticated, user]);\r\n\r\n  // Reset pagination when filters change\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [searchQuery, orderStatus, deliveryStatus]);\r\n\r\n  // Loading state\r\n  if (loading && orders.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg p-6 shadow-sm\">\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"h-8 bg-gray-200 rounded w-48 mb-6\"></div>\r\n          <div className=\"space-y-4\">\r\n            {Array.from({ length: 5 }, (_, i) => (\r\n              <div key={i} className=\"h-12 bg-gray-200 rounded w-full\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state with enhanced messaging\r\n  if (error && orders.length === 0) {\r\n    const isAuthError = error.includes('authentication') || error.includes('Admin') || error.includes('Session expired');\r\n    const isCorsError = error.includes('CORS');\r\n    const isNetworkError = error.includes('Network connection failed');\r\n    \r\n    return (\r\n      <div className=\"bg-white rounded-lg p-6 shadow-sm\">\r\n        <div className=\"text-center py-12\">\r\n          <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\r\n            {isAuthError ? 'Authentication Required' : \r\n             isCorsError ? 'Server Configuration Issue' :\r\n             isNetworkError ? 'Connection Problem' :\r\n             'Error Loading Orders'}\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-4 max-w-md mx-auto\">{error}</p>\r\n          \r\n          <div className=\"flex gap-2 justify-center flex-wrap\">\r\n            {isAuthError ? (\r\n              <button \r\n                onClick={() => window.location.href = '/admin/login'}\r\n                className=\"bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600\"\r\n              >\r\n                Go to Login\r\n              </button>\r\n            ) : isCorsError ? (\r\n              <div className=\"text-sm text-gray-500 max-w-md\">\r\n                <p className=\"mb-2\">This error needs to be fixed by your backend administrator.</p>\r\n                <p>The server needs to add CORS headers to allow requests from this domain.</p>\r\n              </div>\r\n            ) : (\r\n              <button \r\n                onClick={fetchOrders}\r\n                disabled={loading}\r\n                className=\"bg-pink-500 text-white px-6 py-2 rounded-md hover:bg-pink-600 disabled:opacity-50\"\r\n              >\r\n                {loading ? 'Retrying...' : 'Try Again'}\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Debug info for developers */}\r\n          {process.env.NODE_ENV === 'development' && (\r\n            <details className=\"mt-4 text-left text-xs text-gray-500\">\r\n              <summary className=\"cursor-pointer\">Debug Info</summary>\r\n              <pre className=\"mt-2 p-2 bg-gray-100 rounded text-left overflow-auto\">\r\n                {JSON.stringify({\r\n                  isAuthenticated,\r\n                  user: user ? { ...user, token: '[HIDDEN]' } : null,\r\n                  isAdmin,\r\n                  error: error\r\n                }, null, 2)}\r\n              </pre>\r\n            </details>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Notification */}\r\n      {notification && (\r\n        <div className={`fixed top-4 right-4 p-4 rounded-md shadow-lg z-50 ${\r\n          notification.type === 'success' \r\n            ? 'bg-green-50 text-green-800 border border-green-200' \r\n            : 'bg-red-50 text-red-800 border border-red-200'\r\n        }`}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <span>{notification.message}</span>\r\n            <button \r\n              onClick={() => setNotification(null)} \r\n              className=\"ml-4 text-xl hover:opacity-70\"\r\n            >\r\n              √ó\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-white rounded-lg p-6 shadow-sm\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-gray-800\">All Orders</h1>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              {loading ? 'Loading...' : `${filteredOrders.length} of ${orders.length} orders`}\r\n            </p>\r\n          </div>\r\n          <button \r\n            onClick={fetchOrders}\r\n            className=\"bg-pink-500 hover:bg-pink-600 text-white px-4 py-2 rounded-md flex items-center transition-colors\"\r\n            disabled={loading}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n            Refresh\r\n          </button>\r\n        </div>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"space-y-4 mb-6\">\r\n          {/* Search Bar */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by order ID, customer name, email, or phone...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"pl-10 pr-4 py-2 w-full border border-gray-200 rounded-md focus:ring-2 focus:ring-pink-500 focus:border-pink-500 transition-colors\"\r\n            />\r\n          </div>\r\n\r\n          {/* Filter Controls */}\r\n          <div className=\"flex gap-4 items-center flex-wrap\">\r\n            <div className=\"flex border border-gray-200 rounded-lg overflow-hidden\">\r\n              <div className=\"p-3 bg-gray-50 border-r border-gray-200\">\r\n                <Filter className=\"h-5 w-5 text-gray-500\" />\r\n              </div>\r\n              <div className=\"px-4 py-2 bg-gray-50\">\r\n                <span className=\"text-sm font-medium\">Filter By</span>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Order Status Filter */}\r\n            <select \r\n              className=\"bg-gray-50 border border-gray-200 rounded-lg py-2 px-4 text-sm transition-colors hover:bg-gray-100\"\r\n              value={orderStatus}\r\n              onChange={(e) => setOrderStatus(e.target.value)}\r\n            >\r\n              {ORDER_STATUS_OPTIONS.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Delivery Status Filter */}\r\n            <select \r\n              className=\"bg-gray-50 border border-gray-200 rounded-lg py-2 px-4 text-sm transition-colors hover:bg-gray-100\"\r\n              value={deliveryStatus}\r\n              onChange={(e) => setDeliveryStatus(e.target.value)}\r\n            >\r\n              {DELIVERY_STATUS_OPTIONS.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <button \r\n              className=\"px-4 py-2 rounded-lg text-pink-500 hover:bg-pink-50 transition-colors\"\r\n              onClick={resetFilter}\r\n            >\r\n              Reset Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Orders Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full text-left\">\r\n            <thead>\r\n              <tr className=\"border-b border-gray-200\">\r\n                {['ORDER ID', 'CUSTOMER', 'AMOUNT', 'DATE', 'PAYMENT', 'DELIVERY', 'ACTION'].map(header => (\r\n                  <th key={header} className=\"pb-3 text-sm font-medium text-gray-500 uppercase\">\r\n                    {header}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paginationData.currentOrders.length > 0 ? paginationData.currentOrders.map((order) => (\r\n                <tr key={order.id} className=\"border-b border-gray-100 hover:bg-gray-50 transition-colors\">\r\n                  <td className=\"py-4 text-sm font-mono\">{order.id}</td>\r\n                  <td className=\"py-4\">\r\n                    <div>\r\n                      <div className=\"text-sm font-medium\">{order.name}</div>\r\n                      <div className=\"text-xs text-gray-500\">{order.email}</div>\r\n                      <div className=\"text-xs text-gray-500\">{order.phone}</div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"py-4 text-sm font-semibold\">{formatCurrency(order.amount)}</td>\r\n                  <td className=\"py-4 text-sm\">{order.date}</td>\r\n                  <td className=\"py-4\">\r\n                    <span className={`text-xs px-3 py-1 rounded-full font-medium ${getStatusBadgeStyle(order.orderStatus)}`}>\r\n                      {order.orderStatus}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"py-4\">\r\n                    <select\r\n                      value={order.deliveryStatus}\r\n                      onChange={(e) => handleDeliveryStatusChange(order.id, e.target.value)}\r\n                      disabled={isUpdating || !isAuthenticated || !isAdmin}\r\n                      className={`text-xs px-2 py-1 rounded-full border-0 cursor-pointer font-medium transition-colors ${getStatusBadgeStyle(order.deliveryStatus)} ${!isAuthenticated || !isAdmin ? 'opacity-50 cursor-not-allowed' : 'hover:opacity-80'}`}\r\n                    >\r\n                      {DELIVERY_UPDATE_OPTIONS.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </td>\r\n                  <td className=\"py-4\">\r\n                    <button \r\n                      className=\"text-pink-500 border border-pink-500 rounded-lg px-4 py-2 text-sm hover:bg-pink-50 flex items-center transition-colors\"\r\n                      onClick={() => viewOrderDetails(order)}\r\n                    >\r\n                      <Eye className=\"h-4 w-4 mr-1\" />\r\n                      View Details\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )) : (\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"py-12 text-center text-gray-500\">\r\n                    <div className=\"text-6xl mb-4\">üì¶</div>\r\n                    <p className=\"text-lg font-medium\">No orders found</p>\r\n                    {searchQuery && (\r\n                      <p className=\"text-sm mt-2\">Try adjusting your search or filters</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        {/* Pagination */}\r\n        {paginationData.totalPages > 1 && (\r\n          <div className=\"mt-6 flex items-center justify-between\">\r\n            <div className=\"text-sm text-gray-500\">\r\n              Showing {paginationData.indexOfFirstOrder + 1}-{paginationData.indexOfLastOrder} of {filteredOrders.length} orders\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button \r\n                onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n                disabled={currentPage === 1}\r\n                className=\"h-8 w-8 flex justify-center items-center rounded border border-gray-200 disabled:opacity-50 hover:bg-gray-50 transition-colors\"\r\n              >\r\n                ‚Äπ\r\n              </button>\r\n              <span className=\"text-sm px-2\">Page {currentPage} of {paginationData.totalPages}</span>\r\n              <button \r\n                onClick={() => setCurrentPage(Math.min(paginationData.totalPages, currentPage + 1))}\r\n                disabled={currentPage === paginationData.totalPages}\r\n                className=\"h-8 w-8 flex justify-center items-center rounded border border-gray-200 disabled:opacity-50 hover:bg-gray-50 transition-colors\"\r\n              >\r\n                ‚Ä∫\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Order Details Modal */}\r\n      {showModal && selectedOrder && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-start mb-6\">\r\n              <h3 className=\"text-xl font-semibold\">Order Details</h3>\r\n              <button \r\n                onClick={() => setShowModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-600 text-2xl leading-none\"\r\n              >\r\n                √ó\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {/* Order Info */}\r\n              <div>\r\n                <h4 className=\"font-semibold mb-3\">Order Information</h4>\r\n                <div className=\"space-y-2 text-sm\">\r\n                  <div><span className=\"font-medium\">Order ID:</span> {selectedOrder.id}</div>\r\n                  <div><span className=\"font-medium\">Date:</span> {selectedOrder.date}</div>\r\n                  <div><span className=\"font-medium\">Amount:</span> {formatCurrency(selectedOrder.amount)}</div>\r\n                  <div><span className=\"font-medium\">Payment:</span> \r\n                    <span className={`ml-2 px-2 py-1 rounded text-xs ${getStatusBadgeStyle(selectedOrder.orderStatus)}`}>\r\n                      {selectedOrder.orderStatus}\r\n                    </span>\r\n                  </div>\r\n                  <div><span className=\"font-medium\">Delivery:</span> \r\n                    <span className={`ml-2 px-2 py-1 rounded text-xs ${getStatusBadgeStyle(selectedOrder.deliveryStatus)}`}>\r\n                      {selectedOrder.deliveryStatus}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Customer Info */}\r\n              <div>\r\n                <h4 className=\"font-semibold mb-3\">Customer Information</h4>\r\n                <div className=\"space-y-2 text-sm\">\r\n                  <div><span className=\"font-medium\">Name:</span> {selectedOrder.name}</div>\r\n                  <div><span className=\"font-medium\">Email:</span> {selectedOrder.email}</div>\r\n                  <div><span className=\"font-medium\">Phone:</span> {selectedOrder.phone}</div>\r\n                  <div><span className=\"font-medium\">Method:</span> {selectedOrder.deliveryMethod}</div>\r\n                  <div><span className=\"font-medium\">Address:</span> {selectedOrder.address}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Order Items */}\r\n            {selectedOrder.cart?.length > 0 && (\r\n              <div className=\"mt-6\">\r\n                <h4 className=\"font-semibold mb-3\">Order Items</h4>\r\n                <div className=\"space-y-2\">\r\n                  {selectedOrder.cart.map((item, index) => (\r\n                    <div key={index} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\r\n                      <div>\r\n                        <p className=\"font-medium\">{item.product_name}</p>\r\n                        <p className=\"text-sm text-gray-500\">Qty: {item.ordered_quantity}</p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"font-semibold\">{formatCurrency(item.product_price * item.ordered_quantity)}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mt-6 flex justify-end\">\r\n              <button \r\n                onClick={() => setShowModal(false)}\r\n                className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllOrders;"],"names":["__iconNode","Funnel","createLucideIcon","AllOrders","isAuthenticated","user","isAdmin","useAuth","orders","setOrders","useState","loading","setLoading","error","setError","currentPage","setCurrentPage","orderStatus","setOrderStatus","deliveryStatus","setDeliveryStatus","searchQuery","setSearchQuery","selectedOrder","setSelectedOrder","showModal","setShowModal","notification","setNotification","isUpdating","setIsUpdating","ORDERS_PER_PAGE","ORDER_STATUS_OPTIONS","useMemo","DELIVERY_STATUS_OPTIONS","DELIVERY_UPDATE_OPTIONS","formatCurrency","useCallback","amount","formatDate","dateString","getStatusBadgeStyle","status","checkAuth","showNotification","type","message","formatOrderData","ordersData","order","fetchOrders","filters","result","orderService","_a","formattedOrders","err","errorMessage","handleDeliveryStatusChange","orderId","newStatus","prev","filteredOrders","query","_b","_c","_d","paginationData","totalPages","indexOfLastOrder","indexOfFirstOrder","currentOrders","resetFilter","viewOrderDetails","useEffect","timer","jsxs","jsx","_","i","isAuthError","isCorsError","isNetworkError","AlertCircle","RefreshCw","Search","e","Filter","option","header","Eye","item","index"],"mappings":"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","x_google_ignoreList":[0]}