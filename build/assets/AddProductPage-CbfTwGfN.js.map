{"version":3,"file":"AddProductPage-CbfTwGfN.js","sources":["../../node_modules/lucide-react/dist/esm/icons/image.js","../../src/admin/pages/products/AddProductPage.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.487.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", ry: \"2\", key: \"1m3agn\" }],\n  [\"circle\", { cx: \"9\", cy: \"9\", r: \"2\", key: \"af1f0g\" }],\n  [\"path\", { d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\", key: \"1xmnt7\" }]\n];\nconst Image = createLucideIcon(\"image\", __iconNode);\n\nexport { __iconNode, Image as default };\n//# sourceMappingURL=image.js.map\n","import React, { useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ChevronLeft, Image, Plus, X, AlertCircle, CheckCircle } from 'lucide-react';\r\nimport { productService } from '../../../api/services';\r\n\r\nconst AddProductPage = () => {\r\n  const fileInputRef = useRef(null);\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    price: '',\r\n    slashed_price: '',\r\n    category: '',\r\n    quantity: '',\r\n    description: '',\r\n    concern_options: [],\r\n    images: []\r\n  });\r\n  \r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [previewImages, setPreviewImages] = useState([]);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  // Categories from your API config - make sure these match your service file CATEGORIES\r\n  const categories = [\r\n    { value: \"serums\", label: \"Serums\" },\r\n    { value: \"face cleansers\", label: \"Face Cleansers\" },\r\n    { value: \"sunscreens\", label: \"Sunscreens\" },\r\n    { value: \"moisturizers\", label: \"Moisturizers\" },\r\n    { value: \"bathe and body\", label: \"Bathe and Body\" },\r\n    { value: \"toners\", label: \"Toners\" }\r\n  ];\r\n\r\n  // Refined skin concern options\r\n  const concernOptions = [\r\n    { value: \"anti_aging\", label: \"Anti-Aging\" },\r\n    { value: \"oily_skin\", label: \"Oily Skin\" },\r\n    { value: \"dry_skin\", label: \"Dry Skin\" },\r\n    { value: \"acne\", label: \"Acne\" },\r\n    { value: \"hyperpigmentation\", label: \"Hyperpigmentation\" },\r\n    { value: \"sensitive_skin\", label: \"Sensitive Skin\" }\r\n  ];\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Clear error when field is modified\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: null\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleConcernToggle = (concernValue) => {\r\n    const updatedConcerns = formData.concern_options.includes(concernValue)\r\n      ? formData.concern_options.filter(c => c !== concernValue)\r\n      : [...formData.concern_options, concernValue];\r\n    \r\n    setFormData({\r\n      ...formData,\r\n      concern_options: updatedConcerns\r\n    });\r\n    \r\n    // Clear error when concerns are modified\r\n    if (errors.concern_options) {\r\n      setErrors({\r\n        ...errors,\r\n        concern_options: null\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) newErrors.name = \"Product name is required\";\r\n    if (!formData.price) newErrors.price = \"Price is required\";\r\n    if (formData.price <= 0) newErrors.price = \"Price must be greater than 0\";\r\n    if (!formData.category) newErrors.category = \"Category is required\";\r\n    if (!formData.quantity) newErrors.quantity = \"Quantity is required\";\r\n    if (formData.quantity < 0) newErrors.quantity = \"Quantity must be 0 or greater\";\r\n    if (!formData.description.trim()) newErrors.description = \"Description is required\";\r\n    if (formData.concern_options.length === 0) newErrors.concern_options = \"At least one skin concern is required\";\r\n    if (formData.images.length === 0) newErrors.images = \"At least one product image is required\";\r\n    \r\n    // Validate slashed price is greater than main price if provided\r\n    if (formData.slashed_price && Number(formData.slashed_price) <= Number(formData.price)) {\r\n      newErrors.slashed_price = \"Original price should be greater than current price\";\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      setNotification({\r\n        type: 'error',\r\n        message: 'Please correct the errors above and try again.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    setNotification(null);\r\n    \r\n    try {\r\n      // Prepare data for the productService\r\n      const productData = {\r\n        name: formData.name.trim(),\r\n        price: parseFloat(formData.price),\r\n        description: formData.description.trim(),\r\n        quantity: parseInt(formData.quantity, 10),\r\n        category: formData.category,\r\n        concern_options: formData.concern_options, // Required field\r\n        images: formData.images\r\n      };\r\n      \r\n      // Add slashed price if provided\r\n      if (formData.slashed_price) {\r\n        productData.slashed_price = parseFloat(formData.slashed_price);\r\n      }\r\n      \r\n      console.log('Submitting product via productService...', {\r\n        ...productData,\r\n        images: `${productData.images.length} files`\r\n      });\r\n      \r\n      // Use the productService instead of direct fetch\r\n      const result = await productService.addProduct(productData);\r\n      \r\n      console.log('Product added successfully:', result);\r\n      \r\n      if (result && result.code === 200) {\r\n        setNotification({\r\n          type: 'success',\r\n          message: `Product \"${formData.name}\" has been added successfully!`\r\n        });\r\n        \r\n        // Reset form and redirect after successful submission\r\n        setTimeout(() => {\r\n          \r\n         navigate('/admin/products/stock');\r\n        }, 2000);\r\n      } else {\r\n        throw new Error(result?.message || 'Failed to add product');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      \r\n      // Handle specific API errors\r\n      let errorMessage = 'Failed to add product. Please try again.';\r\n      \r\n      if (error.message.includes('name is required')) {\r\n        errorMessage = 'Product name is required.';\r\n      } else if (error.message.includes('price is required')) {\r\n        errorMessage = 'Valid price is required.';\r\n      } else if (error.message.includes('description is required')) {\r\n        errorMessage = 'Description is required.';\r\n      } else if (error.message.includes('quantity is required')) {\r\n        errorMessage = 'Valid quantity is required.';\r\n      } else if (error.message.includes('category is required')) {\r\n        errorMessage = 'Valid category is required.';\r\n      } else if (error.message.includes('concern option')) {\r\n        errorMessage = 'At least one skin concern is required.';\r\n      } else if (error.message.includes('Only image files allowed')) {\r\n        errorMessage = 'Only image files are allowed.';\r\n      } else if (error.message.includes('Image must be less than 2MB')) {\r\n        errorMessage = 'Images must be less than 2MB each.';\r\n      } else if (error.message.includes('Authentication') || error.message.includes('Unauthorized')) {\r\n        errorMessage = 'Please log in again to continue.';\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      \r\n      setNotification({\r\n        type: 'error',\r\n        message: errorMessage\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const files = e.target.files;\r\n    handleFileSelection(files);\r\n  };\r\n  \r\n  const handleFileSelection = (files) => {\r\n    // Limit to maximum 5 images\r\n    const totalImages = previewImages.length + files.length;\r\n    if (totalImages > 5) {\r\n      setNotification({\r\n        type: 'error',\r\n        message: 'Maximum 5 images allowed per product'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Create preview URLs for the images\r\n    const newPreviewImages = [...previewImages];\r\n    const newImages = [...formData.images];\r\n    \r\n    Array.from(files).forEach(file => {\r\n      // Only accept image files\r\n      if (!file.type.startsWith('image/')) {\r\n        setNotification({\r\n          type: 'error',\r\n          message: 'Only image files are allowed'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // Check file size (2MB limit)\r\n      if (file.size > 2 * 1024 * 1024) {\r\n        setNotification({\r\n          type: 'error',\r\n          message: `File ${file.name} is too large. Maximum size is 2MB`\r\n        });\r\n        return;\r\n      }\r\n      \r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        newPreviewImages.push({\r\n          url: e.target.result,\r\n          file: file\r\n        });\r\n        setPreviewImages([...newPreviewImages]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      \r\n      newImages.push(file);\r\n    });\r\n    \r\n    setFormData({\r\n      ...formData,\r\n      images: newImages\r\n    });\r\n    \r\n    // Clear image error if we now have images\r\n    if (errors.images && newImages.length > 0) {\r\n      setErrors({\r\n        ...errors,\r\n        images: null\r\n      });\r\n    }\r\n  };\r\n  \r\n  const removeImage = (index) => {\r\n    const newPreviewImages = [...previewImages];\r\n    const newImages = [...formData.images];\r\n    \r\n    newPreviewImages.splice(index, 1);\r\n    newImages.splice(index, 1);\r\n    \r\n    setPreviewImages(newPreviewImages);\r\n    setFormData({\r\n      ...formData,\r\n      images: newImages\r\n    });\r\n  };\r\n  \r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n  \r\n  const handleDragLeave = () => {\r\n    setIsDragging(false);\r\n  };\r\n  \r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    \r\n    if (e.dataTransfer.files) {\r\n      handleFileSelection(e.dataTransfer.files);\r\n    }\r\n  };\r\n  const navigate = useNavigate();\r\n  const handleBack = () => {\r\n    const hasChanges = Object.values(formData).some(value => \r\n      typeof value === 'string' ? value.trim() !== '' : \r\n      Array.isArray(value) ? value.length > 0 : false\r\n    );\r\n    \r\n    if (hasChanges && !window.confirm('You have unsaved changes. Are you sure you want to leave?')) {\r\n      return;\r\n    }\r\n    \r\n    navigate('/admin/products');\r\n    console.log('Would navigate back to products list...');\r\n  };\r\n\r\n  // Auto-hide notification after 5 seconds\r\n  React.useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen p-4 sm:p-6 md:p-8\">\r\n      {/* Notification */}\r\n      {notification && (\r\n        <div className={`fixed top-4 right-4 p-4 rounded-md shadow-lg z-50 max-w-md ${\r\n          notification.type === 'success' \r\n            ? 'bg-green-50 text-green-800 border border-green-200' \r\n            : 'bg-red-50 text-red-800 border border-red-200'\r\n        }`}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              {notification.type === 'success' ? (\r\n                <CheckCircle size={20} className=\"mr-2 flex-shrink-0\" />\r\n              ) : (\r\n                <AlertCircle size={20} className=\"mr-2 flex-shrink-0\" />\r\n              )}\r\n              <span>{notification.message}</span>\r\n            </div>\r\n            <button \r\n              onClick={() => setNotification(null)} \r\n              className=\"ml-4 text-xl font-bold hover:opacity-70\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Back button navigation */}\r\n        <div className=\"mb-6\">\r\n          <button \r\n            onClick={handleBack}\r\n            className=\"flex items-center text-gray-600 hover:text-pink-500 transition-colors\"\r\n            disabled={isSubmitting}\r\n          >\r\n            <ChevronLeft size={20} />\r\n            <span className=\"ml-1\">Back to Products</span>\r\n          </button>\r\n        </div>  \r\n        \r\n        <h1 className=\"text-2xl font-medium mb-6 md:mb-8\">Add New Product</h1>\r\n        \r\n        <div className=\"bg-white rounded-lg p-4 sm:p-6 md:p-8 shadow-sm\">\r\n          <div className=\"flex flex-col md:flex-row\">\r\n            {/* Image Upload Section */}\r\n            <div className=\"w-full md:w-1/3 md:mr-8 mb-6 md:mb-0\">\r\n              <div\r\n                className={`${\r\n                  isDragging ? 'border-pink-500 bg-pink-50' : errors.images ? 'border-red-500 bg-red-50' : 'border-gray-300 bg-gray-100'\r\n                } border-2 border-dashed h-64 rounded-lg flex items-center justify-center mb-4 transition-all cursor-pointer`}\r\n                onClick={() => fileInputRef.current?.click()}\r\n                onDragOver={handleDragOver}\r\n                onDragLeave={handleDragLeave}\r\n                onDrop={handleDrop}\r\n              >\r\n                {previewImages.length === 0 ? (\r\n                  <div className=\"text-center p-4\">\r\n                    <div className=\"mx-auto bg-white p-4 rounded-full mb-2 inline-flex\">\r\n                      <Image size={24} className=\"text-gray-400\" />\r\n                    </div>\r\n                    <p className=\"text-gray-500 mb-2\">Drag and drop images here or click to browse</p>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 py-2 px-4 rounded-md text-sm\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Add Image\r\n                    </button>\r\n                    <p className=\"text-xs text-gray-400 mt-2\">Max 5 images, 2MB each</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"relative w-full h-full\">\r\n                    <img \r\n                      src={previewImages[0].url} \r\n                      alt=\"Product preview\" \r\n                      className=\"h-full w-full object-contain rounded-lg\" \r\n                    />\r\n                    {!isSubmitting && (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          removeImage(0);\r\n                        }}\r\n                        className=\"absolute top-2 right-2 bg-gray-800 bg-opacity-70 text-white p-1 rounded-full hover:bg-opacity-100\"\r\n                      >\r\n                        <X size={16} />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  onChange={handleImageUpload}\r\n                  multiple\r\n                  accept=\"image/*\"\r\n                  className=\"hidden\"\r\n                  disabled={isSubmitting}\r\n                />\r\n              </div>\r\n              \r\n              {errors.images && (\r\n                <p className=\"mb-4 text-red-500 text-sm flex items-center\">\r\n                  <AlertCircle size={16} className=\"mr-1\" />\r\n                  {errors.images}\r\n                </p>\r\n              )}\r\n              \r\n              <div className=\"grid grid-cols-4 gap-2\">\r\n                {[...Array(4)].map((_, index) => {\r\n                  const imageIndex = index + 1;\r\n                  const hasImage = previewImages.length > imageIndex;\r\n                  \r\n                  return (\r\n                    <div \r\n                      key={index}\r\n                      className={`h-20 w-full bg-gray-100 rounded-md relative ${hasImage ? '' : 'flex items-center justify-center border border-gray-300 cursor-pointer'}`}\r\n                      onClick={() => !hasImage && !isSubmitting && fileInputRef.current?.click()}\r\n                    >\r\n                      {hasImage ? (\r\n                        <>\r\n                          <img \r\n                            src={previewImages[imageIndex].url} \r\n                            alt={`Product thumbnail ${imageIndex}`} \r\n                            className=\"h-full w-full object-cover rounded-md\" \r\n                          />\r\n                          {!isSubmitting && (\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                removeImage(imageIndex);\r\n                              }}\r\n                              className=\"absolute top-1 right-1 bg-gray-800 bg-opacity-70 text-white p-1 rounded-full hover:bg-opacity-100\"\r\n                            >\r\n                              <X size={12} />\r\n                            </button>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <Plus size={20} className=\"text-gray-400\" />\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"w-full md:w-2/3\">\r\n              {/* Product Details */}\r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 mb-2\">Product Name*</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  disabled={isSubmitting}\r\n                  className={`w-full border ${errors.name ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-pink-500`}\r\n                  placeholder=\"Enter product name\"\r\n                />\r\n                {errors.name && (\r\n                  <p className=\"mt-1 text-red-500 text-sm flex items-center\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    {errors.name}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col sm:flex-row gap-4 sm:gap-6 mb-6\">\r\n                <div className=\"w-full sm:w-1/2\">\r\n                  <label className=\"block text-gray-700 mb-2\">Current Price*</label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 flex items-center pl-4 pointer-events-none\">\r\n                      <span className=\"text-gray-700 font-bold\">₦</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                      value={formData.price}\r\n                      onChange={handleInputChange}\r\n                      disabled={isSubmitting}\r\n                      min=\"0\"\r\n                      step=\"0.01\"\r\n                      className={`w-full border ${errors.price ? 'border-red-500' : 'border-gray-300'} rounded-lg pl-10 pr-4 py-3 focus:outline-none focus:ring-2 focus:ring-pink-500`}\r\n                      placeholder=\"0.00\"\r\n                    />\r\n                  </div>\r\n                  {errors.price && (\r\n                    <p className=\"mt-1 text-red-500 text-sm flex items-center\">\r\n                      <AlertCircle size={16} className=\"mr-1\" />\r\n                      {errors.price}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"w-full sm:w-1/2\">\r\n                  <label className=\"block text-gray-700 mb-2\">Slashed Price (Optional)</label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 flex items-center pl-4 pointer-events-none\">\r\n                      <span className=\"text-gray-700 font-bold\">₦</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"slashed_price\"\r\n                      value={formData.slashed_price}\r\n                      onChange={handleInputChange}\r\n                      disabled={isSubmitting}\r\n                      min=\"0\"\r\n                      step=\"0.01\"\r\n                      className={`w-full border ${errors.slashed_price ? 'border-red-500' : 'border-gray-300'} rounded-lg pl-10 pr-4 py-3 focus:outline-none focus:ring-2 focus:ring-pink-500`}\r\n                      placeholder=\"0.00\"\r\n                    />\r\n                  </div>\r\n                  {errors.slashed_price && (\r\n                    <p className=\"mt-1 text-red-500 text-sm flex items-center\">\r\n                      <AlertCircle size={16} className=\"mr-1\" />\r\n                      {errors.slashed_price}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 mb-2\">Category*</label>\r\n                <div className=\"relative\">\r\n                  <select\r\n                    name=\"category\"\r\n                    value={formData.category}\r\n                    onChange={handleInputChange}\r\n                    disabled={isSubmitting}\r\n                    className={`w-full border ${errors.category ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-3 appearance-none focus:outline-none focus:ring-2 focus:ring-pink-500`}\r\n                  >\r\n                    <option value=\"\">Select Category</option>\r\n                    {categories.map(category => (\r\n                      <option key={category.value} value={category.value}>\r\n                        {category.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <div className=\"absolute inset-y-0 right-0 flex items-center pr-4 pointer-events-none\">\r\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <polyline points=\"6 9 12 15 18 9\" />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n                {errors.category && (\r\n                  <p className=\"mt-1 text-red-500 text-sm flex items-center\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    {errors.category}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 mb-2\">Available Quantity*</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"quantity\"\r\n                  value={formData.quantity}\r\n                  onChange={handleInputChange}\r\n                  disabled={isSubmitting}\r\n                  min=\"0\"\r\n                  className={`w-full border ${errors.quantity ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-pink-500`}\r\n                  placeholder=\"Enter quantity\"\r\n                />\r\n                {errors.quantity && (\r\n                  <p className=\"mt-1 text-red-500 text-sm flex items-center\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    {errors.quantity}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Skin Concerns Section - Fixed UI layout */}\r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 mb-2\">Skin Concerns*</label>\r\n                <p className=\"text-sm text-gray-500 mb-3\">Select which skin concerns this product addresses:</p>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                  {concernOptions.map(concern => (\r\n                    <label \r\n                      key={concern.value} \r\n                      className={`flex items-center p-3 rounded-lg border cursor-pointer transition-colors ${\r\n                        formData.concern_options.includes(concern.value)\r\n                          ? 'bg-pink-50 border-pink-300 text-pink-700'\r\n                          : 'bg-white border-gray-200 hover:bg-gray-50'\r\n                      } ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={formData.concern_options.includes(concern.value)}\r\n                        onChange={() => handleConcernToggle(concern.value)}\r\n                        disabled={isSubmitting}\r\n                        className=\"sr-only\"\r\n                      />\r\n                      <div className={`w-4 h-4 rounded border-2 mr-3 flex items-center justify-center flex-shrink-0 ${\r\n                        formData.concern_options.includes(concern.value)\r\n                          ? 'bg-pink-500 border-pink-500'\r\n                          : 'border-gray-300'\r\n                      }`}>\r\n                        {formData.concern_options.includes(concern.value) && (\r\n                          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        )}\r\n                      </div>\r\n                      <span className=\"text-sm font-medium\">{concern.label}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n                {errors.concern_options && (\r\n                  <p className=\"mt-2 text-red-500 text-sm flex items-center\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    {errors.concern_options}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 mb-2\">Product Description*</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleInputChange}\r\n                  disabled={isSubmitting}\r\n                  rows=\"5\"\r\n                  className={`w-full border ${errors.description ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-pink-500`}\r\n                  placeholder=\"Write detailed information about your product...\"\r\n                />\r\n                {errors.description && (\r\n                  <p className=\"mt-1 text-red-500 text-sm flex items-center\">\r\n                    <AlertCircle size={16} className=\"mr-1\" />\r\n                    {errors.description}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"mt-8\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleSubmit}\r\n                  disabled={isSubmitting}\r\n                  className={`w-full ${isSubmitting ? 'bg-pink-400 cursor-not-allowed' : 'bg-pink-500 hover:bg-pink-600'} text-white font-medium py-3 px-4 rounded-lg transition-colors flex items-center justify-center`}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                      </svg>\r\n                      Adding Product...\r\n                    </>\r\n                  ) : \"Add Product\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductPage;"],"names":["__iconNode","Image","createLucideIcon","AddProductPage","fileInputRef","useRef","formData","setFormData","useState","errors","setErrors","isSubmitting","setIsSubmitting","previewImages","setPreviewImages","isDragging","setIsDragging","notification","setNotification","categories","concernOptions","handleInputChange","e","name","value","handleConcernToggle","concernValue","updatedConcerns","c","validateForm","newErrors","handleSubmit","productData","result","productService","navigate","error","errorMessage","handleImageUpload","files","handleFileSelection","newPreviewImages","newImages","file","reader","removeImage","index","handleDragOver","handleDragLeave","handleDrop","useNavigate","handleBack","React","timer","jsxs","jsx","CheckCircle","AlertCircle","ChevronLeft","_a","X","_","imageIndex","hasImage","Fragment","Plus","category","concern"],"mappings":"wNAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAa,CACjB,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,KAAM,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,SAAU,EACvF,CAAC,SAAU,CAAE,GAAI,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,SAAU,EACtD,CAAC,OAAQ,CAAE,EAAG,4CAA6C,IAAK,QAAU,CAAA,CAC5E,EACMC,EAAQC,EAAiB,QAASF,CAAU,ECT5CG,EAAiB,IAAM,CACrB,MAAAC,EAAeC,SAAO,IAAI,EAE1B,CAACC,EAAUC,CAAW,EAAIC,WAAS,CACvC,KAAM,GACN,MAAO,GACP,cAAe,GACf,SAAU,GACV,SAAU,GACV,YAAa,GACb,gBAAiB,CAAC,EAClB,OAAQ,CAAA,CAAC,CACV,EAEK,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAS,CAAA,CAAE,EACjC,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAS,EAAK,EAChD,CAACK,EAAeC,CAAgB,EAAIN,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACO,EAAYC,CAAa,EAAIR,EAAAA,SAAS,EAAK,EAC5C,CAACS,EAAcC,CAAe,EAAIV,EAAAA,SAAS,IAAI,EAG/CW,EAAa,CACjB,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,iBAAkB,MAAO,gBAAiB,EACnD,CAAE,MAAO,aAAc,MAAO,YAAa,EAC3C,CAAE,MAAO,eAAgB,MAAO,cAAe,EAC/C,CAAE,MAAO,iBAAkB,MAAO,gBAAiB,EACnD,CAAE,MAAO,SAAU,MAAO,QAAS,CACrC,EAGMC,EAAiB,CACrB,CAAE,MAAO,aAAc,MAAO,YAAa,EAC3C,CAAE,MAAO,YAAa,MAAO,WAAY,EACzC,CAAE,MAAO,WAAY,MAAO,UAAW,EACvC,CAAE,MAAO,OAAQ,MAAO,MAAO,EAC/B,CAAE,MAAO,oBAAqB,MAAO,mBAAoB,EACzD,CAAE,MAAO,iBAAkB,MAAO,gBAAiB,CACrD,EAEMC,EAAqBC,GAAM,CAC/B,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAM,EAAIF,EAAE,OACdf,EAAA,CACV,GAAGD,EACH,CAACiB,CAAI,EAAGC,CAAA,CACT,EAGGf,EAAOc,CAAI,GACHb,EAAA,CACR,GAAGD,EACH,CAACc,CAAI,EAAG,IAAA,CACT,CAEL,EAEME,EAAuBC,GAAiB,CAC5C,MAAMC,EAAkBrB,EAAS,gBAAgB,SAASoB,CAAY,EAClEpB,EAAS,gBAAgB,OAAOsB,GAAKA,IAAMF,CAAY,EACvD,CAAC,GAAGpB,EAAS,gBAAiBoB,CAAY,EAElCnB,EAAA,CACV,GAAGD,EACH,gBAAiBqB,CAAA,CAClB,EAGGlB,EAAO,iBACCC,EAAA,CACR,GAAGD,EACH,gBAAiB,IAAA,CAClB,CAEL,EAEMoB,EAAe,IAAM,CACzB,MAAMC,EAAY,CAAC,EAEnB,OAAKxB,EAAS,KAAK,KAAK,MAAa,KAAO,4BACvCA,EAAS,QAAOwB,EAAU,MAAQ,qBACnCxB,EAAS,OAAS,IAAGwB,EAAU,MAAQ,gCACtCxB,EAAS,WAAUwB,EAAU,SAAW,wBACxCxB,EAAS,WAAUwB,EAAU,SAAW,wBACzCxB,EAAS,SAAW,IAAGwB,EAAU,SAAW,iCAC3CxB,EAAS,YAAY,KAAK,MAAa,YAAc,2BACtDA,EAAS,gBAAgB,SAAW,MAAa,gBAAkB,yCACnEA,EAAS,OAAO,SAAW,MAAa,OAAS,0CAGjDA,EAAS,eAAiB,OAAOA,EAAS,aAAa,GAAK,OAAOA,EAAS,KAAK,IACnFwB,EAAU,cAAgB,uDAG5BpB,EAAUoB,CAAS,EACZ,OAAO,KAAKA,CAAS,EAAE,SAAW,CAC3C,EAEMC,EAAe,MAAOT,GAAM,CAG5B,GAFJA,EAAE,eAAe,EAEb,CAACO,IAAgB,CACHX,EAAA,CACd,KAAM,QACN,QAAS,gDAAA,CACV,EACD,MAAA,CAGFN,EAAgB,EAAI,EACpBM,EAAgB,IAAI,EAEhB,GAAA,CAEF,MAAMc,EAAc,CAClB,KAAM1B,EAAS,KAAK,KAAK,EACzB,MAAO,WAAWA,EAAS,KAAK,EAChC,YAAaA,EAAS,YAAY,KAAK,EACvC,SAAU,SAASA,EAAS,SAAU,EAAE,EACxC,SAAUA,EAAS,SACnB,gBAAiBA,EAAS,gBAC1B,OAAQA,EAAS,MACnB,EAGIA,EAAS,gBACC0B,EAAA,cAAgB,WAAW1B,EAAS,aAAa,GAG/D,QAAQ,IAAI,2CAA4C,CACtD,GAAG0B,EACH,OAAQ,GAAGA,EAAY,OAAO,MAAM,QAAA,CACrC,EAGD,MAAMC,EAAS,MAAMC,EAAe,WAAWF,CAAW,EAItD,GAFI,QAAA,IAAI,8BAA+BC,CAAM,EAE7CA,GAAUA,EAAO,OAAS,IACZf,EAAA,CACd,KAAM,UACN,QAAS,YAAYZ,EAAS,IAAI,gCAAA,CACnC,EAGD,WAAW,IAAM,CAEhB6B,EAAS,uBAAuB,GAC9B,GAAI,MAEP,OAAM,IAAI,OAAMF,GAAA,YAAAA,EAAQ,UAAW,uBAAuB,QAGrDG,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAG5C,IAAIC,EAAe,2CAEfD,EAAM,QAAQ,SAAS,kBAAkB,EAC5BC,EAAA,4BACND,EAAM,QAAQ,SAAS,mBAAmB,EACpCC,EAAA,2BACND,EAAM,QAAQ,SAAS,yBAAyB,EAC1CC,EAAA,2BACND,EAAM,QAAQ,SAAS,sBAAsB,EACvCC,EAAA,8BACND,EAAM,QAAQ,SAAS,sBAAsB,EACvCC,EAAA,8BACND,EAAM,QAAQ,SAAS,gBAAgB,EACjCC,EAAA,yCACND,EAAM,QAAQ,SAAS,0BAA0B,EAC3CC,EAAA,gCACND,EAAM,QAAQ,SAAS,6BAA6B,EAC9CC,EAAA,qCACND,EAAM,QAAQ,SAAS,gBAAgB,GAAKA,EAAM,QAAQ,SAAS,cAAc,EAC3EC,EAAA,mCACND,EAAM,UACfC,EAAeD,EAAM,SAGPlB,EAAA,CACd,KAAM,QACN,QAASmB,CAAA,CACV,CAAA,QACD,CACAzB,EAAgB,EAAK,CAAA,CAEzB,EAEM0B,EAAqBhB,GAAM,CACzB,MAAAiB,EAAQjB,EAAE,OAAO,MACvBkB,EAAoBD,CAAK,CAC3B,EAEMC,EAAuBD,GAAU,CAGrC,GADoB1B,EAAc,OAAS0B,EAAM,OAC/B,EAAG,CACHrB,EAAA,CACd,KAAM,QACN,QAAS,sCAAA,CACV,EACD,MAAA,CAII,MAAAuB,EAAmB,CAAC,GAAG5B,CAAa,EACpC6B,EAAY,CAAC,GAAGpC,EAAS,MAAM,EAErC,MAAM,KAAKiC,CAAK,EAAE,QAAgBI,GAAA,CAEhC,GAAI,CAACA,EAAK,KAAK,WAAW,QAAQ,EAAG,CACnBzB,EAAA,CACd,KAAM,QACN,QAAS,8BAAA,CACV,EACD,MAAA,CAIF,GAAIyB,EAAK,KAAO,EAAI,KAAO,KAAM,CACfzB,EAAA,CACd,KAAM,QACN,QAAS,QAAQyB,EAAK,IAAI,oCAAA,CAC3B,EACD,MAAA,CAGI,MAAAC,EAAS,IAAI,WACZA,EAAA,OAAUtB,GAAM,CACrBmB,EAAiB,KAAK,CACpB,IAAKnB,EAAE,OAAO,OACd,KAAAqB,CAAA,CACD,EACgB7B,EAAA,CAAC,GAAG2B,CAAgB,CAAC,CACxC,EACAG,EAAO,cAAcD,CAAI,EAEzBD,EAAU,KAAKC,CAAI,CAAA,CACpB,EAEWpC,EAAA,CACV,GAAGD,EACH,OAAQoC,CAAA,CACT,EAGGjC,EAAO,QAAUiC,EAAU,OAAS,GAC5BhC,EAAA,CACR,GAAGD,EACH,OAAQ,IAAA,CACT,CAEL,EAEMoC,EAAeC,GAAU,CACvB,MAAAL,EAAmB,CAAC,GAAG5B,CAAa,EACpC6B,EAAY,CAAC,GAAGpC,EAAS,MAAM,EAEpBmC,EAAA,OAAOK,EAAO,CAAC,EACtBJ,EAAA,OAAOI,EAAO,CAAC,EAEzBhC,EAAiB2B,CAAgB,EACrBlC,EAAA,CACV,GAAGD,EACH,OAAQoC,CAAA,CACT,CACH,EAEMK,EAAkBzB,GAAM,CAC5BA,EAAE,eAAe,EACjBN,EAAc,EAAI,CACpB,EAEMgC,EAAkB,IAAM,CAC5BhC,EAAc,EAAK,CACrB,EAEMiC,EAAc3B,GAAM,CACxBA,EAAE,eAAe,EACjBN,EAAc,EAAK,EAEfM,EAAE,aAAa,OACGkB,EAAAlB,EAAE,aAAa,KAAK,CAE5C,EACMa,EAAWe,EAAY,EACvBC,EAAa,IAAM,CACJ,OAAO,OAAO7C,CAAQ,EAAE,KACzCkB,GAAA,OAAOA,GAAU,SAAWA,EAAM,KAAK,IAAM,GAC7C,MAAM,QAAQA,CAAK,EAAIA,EAAM,OAAS,EAAI,EAC5C,GAEkB,CAAC,OAAO,QAAQ,2DAA2D,IAI7FW,EAAS,iBAAiB,EAC1B,QAAQ,IAAI,yCAAyC,EACvD,EAGA,OAAAiB,EAAM,UAAU,IAAM,CACpB,GAAInC,EAAc,CACV,MAAAoC,EAAQ,WAAW,IAAM,CAC7BnC,EAAgB,IAAI,GACnB,GAAI,EACA,MAAA,IAAM,aAAamC,CAAK,CAAA,CACjC,EACC,CAACpC,CAAY,CAAC,EAGfqC,EAAA,KAAC,MAAI,CAAA,UAAU,4CAEZ,SAAA,CAAArC,GACEsC,EAAAA,IAAA,MAAA,CAAI,UAAW,8DACdtC,EAAa,OAAS,UAClB,qDACA,8CACN,GACE,SAACqC,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACZ,SAAA,CAAArC,EAAa,OAAS,UACpBsC,EAAAA,IAAAC,EAAA,CAAY,KAAM,GAAI,UAAU,oBAAqB,CAAA,EAErDD,EAAA,IAAAE,EAAA,CAAY,KAAM,GAAI,UAAU,qBAAqB,EAExDF,EAAAA,IAAC,OAAM,CAAA,SAAAtC,EAAa,OAAQ,CAAA,CAAA,EAC9B,EACAsC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMrC,EAAgB,IAAI,EACnC,UAAU,0CACX,SAAA,GAAA,CAAA,CAED,CAAA,CACF,CACF,CAAA,EAGFoC,EAAAA,KAAC,MAAI,CAAA,UAAU,oBAEb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAD,EAAA,KAAC,SAAA,CACC,QAASH,EACT,UAAU,wEACV,SAAUxC,EAEV,SAAA,CAAC4C,EAAAA,IAAAG,EAAA,CAAY,KAAM,EAAI,CAAA,EACtBH,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAAgB,kBAAA,CAAA,CAAA,CAAA,CAAA,EAE3C,EAECA,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAe,kBAAA,QAEhE,MAAI,CAAA,UAAU,kDACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,4BAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAW,GACTvC,EAAa,6BAA+BN,EAAO,OAAS,2BAA6B,6BAC3F,8GACA,QAAS,IAAM,OAAA,OAAAkD,EAAAvD,EAAa,UAAb,YAAAuD,EAAsB,SACrC,WAAYZ,EACZ,YAAaC,EACb,OAAQC,EAEP,SAAA,CAAApC,EAAc,SAAW,EACvByC,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,qDACb,SAAAA,EAAA,IAACtD,GAAM,KAAM,GAAI,UAAU,eAAA,CAAgB,CAC7C,CAAA,EACCsD,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAA4C,+CAAA,EAC9EA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,2EACV,SAAU5C,EACX,SAAA,WAAA,CAED,EACC4C,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAsB,wBAAA,CAAA,CAAA,CAClE,CAAA,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,IAAK1C,EAAc,CAAC,EAAE,IACtB,IAAI,kBACJ,UAAU,yCAAA,CACZ,EACC,CAACF,GACA4C,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAUjC,GAAM,CACdA,EAAE,gBAAgB,EAClBuB,EAAY,CAAC,CACf,EACA,UAAU,oGAEV,SAAAU,EAAAA,IAACK,EAAE,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACf,EAEJ,EAEFL,EAAA,IAAC,QAAA,CACC,KAAK,OACL,IAAKnD,EACL,SAAUkC,EACV,SAAQ,GACR,OAAO,UACP,UAAU,SACV,SAAU3B,CAAA,CAAA,CACZ,CAAA,CACF,EAECF,EAAO,QACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,MAAA,EACV,EAGD8C,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACM,EAAGf,IAAU,CAC/B,MAAMgB,EAAahB,EAAQ,EACrBiB,EAAWlD,EAAc,OAASiD,EAGtC,OAAAP,EAAA,IAAC,MAAA,CAEC,UAAW,+CAA+CQ,EAAW,GAAK,wEAAwE,GAClJ,QAAS,IAAM,OAAA,OAACA,GAAY,CAACpD,KAAgBgD,EAAAvD,EAAa,UAAb,YAAAuD,EAAsB,UAElE,WAEGL,EAAAA,KAAAU,EAAA,SAAA,CAAA,SAAA,CAAAT,EAAA,IAAC,MAAA,CACC,IAAK1C,EAAciD,CAAU,EAAE,IAC/B,IAAK,qBAAqBA,CAAU,GACpC,UAAU,uCAAA,CACZ,EACC,CAACnD,GACA4C,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAUjC,GAAM,CACdA,EAAE,gBAAgB,EAClBuB,EAAYiB,CAAU,CACxB,EACA,UAAU,oGAEV,SAAAP,EAAAA,IAACK,EAAE,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACf,CAEJ,CAAA,EAECL,EAAAA,IAAAU,EAAA,CAAK,KAAM,GAAI,UAAU,eAAgB,CAAA,CAAA,EAzBvCnB,CA2BP,CAAA,CAEH,CACH,CAAA,CAAA,EACF,EAEAQ,EAAAA,KAAC,MAAI,CAAA,UAAU,kBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,2BAA2B,SAAa,gBAAA,EACzDA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,OACL,MAAOjD,EAAS,KAChB,SAAUe,EACV,SAAUV,EACV,UAAW,iBAAiBF,EAAO,KAAO,iBAAmB,iBAAiB,4EAC9E,YAAY,oBAAA,CACd,EACCA,EAAO,MACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,IAAA,CACV,CAAA,CAAA,EAEJ,EAEA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,2BAA2B,SAAc,iBAAA,EAC1DD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,uEACb,SAAAA,EAAA,IAAC,QAAK,UAAU,0BAA0B,aAAC,CAC7C,CAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,QACL,MAAOjD,EAAS,MAChB,SAAUe,EACV,SAAUV,EACV,IAAI,IACJ,KAAK,OACL,UAAW,iBAAiBF,EAAO,MAAQ,iBAAmB,iBAAiB,kFAC/E,YAAY,MAAA,CAAA,CACd,EACF,EACCA,EAAO,OACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,KAAA,CACV,CAAA,CAAA,EAEJ,EAEA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,2BAA2B,SAAwB,2BAAA,EACpED,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,uEACb,SAAAA,EAAA,IAAC,QAAK,UAAU,0BAA0B,aAAC,CAC7C,CAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,gBACL,MAAOjD,EAAS,cAChB,SAAUe,EACV,SAAUV,EACV,IAAI,IACJ,KAAK,OACL,UAAW,iBAAiBF,EAAO,cAAgB,iBAAmB,iBAAiB,kFACvF,YAAY,MAAA,CAAA,CACd,EACF,EACCA,EAAO,eACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,aAAA,CACV,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAEA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,2BAA2B,SAAS,YAAA,EACrDD,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,KAAK,WACL,MAAOhD,EAAS,SAChB,SAAUe,EACV,SAAUV,EACV,UAAW,iBAAiBF,EAAO,SAAW,iBAAmB,iBAAiB,4FAElF,SAAA,CAAC8C,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAe,kBAAA,EAC/BpC,EAAW,IACV+C,GAAAX,EAAAA,IAAC,SAA4B,CAAA,MAAOW,EAAS,MAC1C,SAASA,EAAA,KAAA,EADCA,EAAS,KAEtB,CACD,CAAA,CAAA,CACH,EACAX,EAAA,IAAC,MAAI,CAAA,UAAU,wEACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,QACrI,SAAAA,EAAAA,IAAC,WAAS,CAAA,OAAO,gBAAiB,CAAA,CAAA,CACpC,CACF,CAAA,CAAA,EACF,EACC9C,EAAO,UACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,QAAA,CACV,CAAA,CAAA,EAEJ,EAEA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,2BAA2B,SAAmB,sBAAA,EAC/DA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,WACL,MAAOjD,EAAS,SAChB,SAAUe,EACV,SAAUV,EACV,IAAI,IACJ,UAAW,iBAAiBF,EAAO,SAAW,iBAAmB,iBAAiB,4EAClF,YAAY,gBAAA,CACd,EACCA,EAAO,UACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,QAAA,CACV,CAAA,CAAA,EAEJ,EAGA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,2BAA2B,SAAc,iBAAA,EACzDA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAkD,qDAAA,QAC3F,MAAI,CAAA,UAAU,wCACZ,SAAAnC,EAAe,IACd+C,GAAAb,EAAA,KAAC,QAAA,CAEC,UAAW,4EACThD,EAAS,gBAAgB,SAAS6D,EAAQ,KAAK,EAC3C,2CACA,2CACN,IAAIxD,EAAe,gCAAkC,EAAE,GAEvD,SAAA,CAAA4C,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASjD,EAAS,gBAAgB,SAAS6D,EAAQ,KAAK,EACxD,SAAU,IAAM1C,EAAoB0C,EAAQ,KAAK,EACjD,SAAUxD,EACV,UAAU,SAAA,CACZ,QACC,MAAI,CAAA,UAAW,gFACdL,EAAS,gBAAgB,SAAS6D,EAAQ,KAAK,EAC3C,8BACA,iBACN,GACG,SAAS7D,EAAA,gBAAgB,SAAS6D,EAAQ,KAAK,GAC9CZ,EAAA,IAAC,OAAI,UAAU,qBAAqB,KAAK,eAAe,QAAQ,YAC9D,SAAAA,EAAA,IAAC,OAAK,CAAA,SAAS,UAAU,EAAE,qHAAqH,SAAS,SAAA,CAAU,CACrK,CAAA,EAEJ,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAuB,WAAQ,KAAM,CAAA,CAAA,CAAA,EAzBhDY,EAAQ,KA2BhB,CAAA,EACH,EACC1D,EAAO,iBACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,eAAA,CACV,CAAA,CAAA,EAEJ,EAEA6C,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,2BAA2B,SAAoB,uBAAA,EAChEA,EAAA,IAAC,WAAA,CACC,KAAK,cACL,MAAOjD,EAAS,YAChB,SAAUe,EACV,SAAUV,EACV,KAAK,IACL,UAAW,iBAAiBF,EAAO,YAAc,iBAAmB,iBAAiB,4EACrF,YAAY,kDAAA,CACd,EACCA,EAAO,aACL6C,OAAA,IAAA,CAAE,UAAU,8CACX,SAAA,CAAAC,EAAA,IAACE,EAAY,CAAA,KAAM,GAAI,UAAU,OAAO,EACvChD,EAAO,WAAA,CACV,CAAA,CAAA,EAEJ,EAEA8C,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASxB,EACT,SAAUpB,EACV,UAAW,UAAUA,EAAe,iCAAmC,+BAA+B,kGAErG,WAEG2C,EAAAA,KAAAU,EAAA,SAAA,CAAA,SAAA,CAACV,EAAAA,KAAA,MAAA,CAAI,UAAU,6CAA6C,MAAM,6BAA6B,KAAK,OAAO,QAAQ,YACjH,SAAA,CAAAC,EAAA,IAAC,SAAO,CAAA,UAAU,aAAa,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,OAAO,eAAe,YAAY,IAAI,QAC3F,OAAK,CAAA,UAAU,aAAa,KAAK,eAAe,EAAE,iHAAkH,CAAA,CAAA,EACvK,EAAM,mBAAA,CAAA,CAER,EACE,aAAA,CAAA,CAER,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ","x_google_ignoreList":[0]}