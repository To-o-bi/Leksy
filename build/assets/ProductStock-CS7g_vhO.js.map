{"version":3,"file":"ProductStock-CS7g_vhO.js","sources":["../../node_modules/lucide-react/dist/esm/icons/square-pen.js","../../src/admin/pages/products/ProductStock.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.487.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\", key: \"1m0v6g\" }],\n  [\n    \"path\",\n    {\n      d: \"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z\",\n      key: \"ohrbg2\"\n    }\n  ]\n];\nconst SquarePen = createLucideIcon(\"square-pen\", __iconNode);\n\nexport { __iconNode, SquarePen as default };\n//# sourceMappingURL=square-pen.js.map\n","import React, { useState, useEffect } from 'react';\r\nimport { Eye, Trash2, Edit, Plus, ChevronLeft, ChevronRight, ShoppingBag, X } from 'lucide-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { productService } from '../../../api';\r\n\r\nconst ProductStockPage = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  const [products, setProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [notification, setNotification] = useState(null);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [activeProduct, setActiveProduct] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n  // Bulk selection states\r\n  const [isSelectionMode, setIsSelectionMode] = useState(false);\r\n  const [selectedProducts, setSelectedProducts] = useState(new Set());\r\n  const [showBulkDeleteModal, setShowBulkDeleteModal] = useState(false);\r\n  const [isBulkDeleting, setIsBulkDeleting] = useState(false);\r\n  \r\n  const itemsPerPage = 10;\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await productService.fetchProducts();\r\n      \r\n      if (response && response.code === 200) {\r\n        setProducts(response.products || []);\r\n      } else {\r\n        throw new Error(response?.message || 'Failed to fetch products');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      setNotification({\r\n        type: 'error',\r\n        message: error.message || 'Failed to load products'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!activeProduct) return;\r\n    \r\n    setIsSubmitting(true);\r\n    try {\r\n      const response = await productService.deleteProduct(activeProduct.product_id);\r\n      \r\n      if (response && response.code === 200) {\r\n        setProducts(prev => prev.filter(p => p.product_id !== activeProduct.product_id));\r\n        setNotification({\r\n          type: 'success',\r\n          message: `Product \"${activeProduct.name}\" deleted successfully`\r\n        });\r\n        setShowDeleteModal(false);\r\n        setActiveProduct(null);\r\n      } else {\r\n        throw new Error(response?.message || 'Failed to delete product');\r\n      }\r\n    } catch (error) {\r\n      setNotification({\r\n        type: 'error',\r\n        message: error.message || 'Failed to delete product'\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Bulk selection handlers\r\n  const handleSelectModeToggle = () => {\r\n    setIsSelectionMode(!isSelectionMode);\r\n    setSelectedProducts(new Set());\r\n  };\r\n\r\n  const handleProductSelect = (productId) => {\r\n    const newSelected = new Set(selectedProducts);\r\n    if (newSelected.has(productId)) {\r\n      newSelected.delete(productId);\r\n    } else {\r\n      newSelected.add(productId);\r\n    }\r\n    setSelectedProducts(newSelected);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    const currentProductIds = currentProducts.map(p => p.product_id);\r\n    const allCurrentSelected = currentProductIds.every(id => selectedProducts.has(id));\r\n    \r\n    const newSelected = new Set(selectedProducts);\r\n    if (allCurrentSelected) {\r\n      currentProductIds.forEach(id => newSelected.delete(id));\r\n    } else {\r\n      currentProductIds.forEach(id => newSelected.add(id));\r\n    }\r\n    setSelectedProducts(newSelected);\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selectedProducts.size === 0) return;\r\n    \r\n    setIsBulkDeleting(true);\r\n    const selectedProductIds = Array.from(selectedProducts);\r\n    const selectedProductNames = products\r\n      .filter(p => selectedProducts.has(p.product_id))\r\n      .map(p => p.name);\r\n    \r\n    try {\r\n      // Delete products one by one using your existing API\r\n      const deletePromises = selectedProductIds.map(productId => \r\n        productService.deleteProduct(productId)\r\n      );\r\n      \r\n      const results = await Promise.allSettled(deletePromises);\r\n      \r\n      // Check which deletions were successful\r\n      const successfulDeletions = [];\r\n      const failedDeletions = [];\r\n      \r\n      results.forEach((result, index) => {\r\n        const productId = selectedProductIds[index];\r\n        if (result.status === 'fulfilled' && result.value?.code === 200) {\r\n          successfulDeletions.push(productId);\r\n        } else {\r\n          failedDeletions.push(productId);\r\n        }\r\n      });\r\n      \r\n      // Update products list by removing successfully deleted products\r\n      if (successfulDeletions.length > 0) {\r\n        setProducts(prev => prev.filter(p => !successfulDeletions.includes(p.product_id)));\r\n      }\r\n      \r\n      // Show notification based on results\r\n      if (failedDeletions.length === 0) {\r\n        setNotification({\r\n          type: 'success',\r\n          message: `Successfully deleted ${successfulDeletions.length} product${successfulDeletions.length > 1 ? 's' : ''}`\r\n        });\r\n      } else if (successfulDeletions.length === 0) {\r\n        setNotification({\r\n          type: 'error',\r\n          message: 'Failed to delete selected products'\r\n        });\r\n      } else {\r\n        setNotification({\r\n          type: 'success',\r\n          message: `Deleted ${successfulDeletions.length} products. ${failedDeletions.length} failed to delete.`\r\n        });\r\n      }\r\n      \r\n      // Reset selection\r\n      setSelectedProducts(new Set());\r\n      setShowBulkDeleteModal(false);\r\n      setIsSelectionMode(false);\r\n      \r\n    } catch (error) {\r\n      setNotification({\r\n        type: 'error',\r\n        message: 'An error occurred during bulk deletion'\r\n      });\r\n    } finally {\r\n      setIsBulkDeleting(false);\r\n    }\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    if (!price) return '₦0.00';\r\n    return '₦' + parseFloat(price).toLocaleString('en-US', { \r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2 \r\n    });\r\n  };\r\n\r\n  const getStockColor = (quantity) => {\r\n    const stock = parseInt(quantity) || 0;\r\n    if (stock === 0) return 'bg-red-100 text-red-800';\r\n    if (stock <= 10) return 'bg-yellow-100 text-yellow-800';\r\n    return 'bg-green-100 text-green-800';\r\n  };\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(products.length / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const currentProducts = products.slice(startIndex, startIndex + itemsPerPage);\r\n\r\n  // Check if all current page products are selected\r\n  const currentPageProductIds = currentProducts.map(p => p.product_id);\r\n  const allCurrentPageSelected = currentPageProductIds.length > 0 && \r\n    currentPageProductIds.every(id => selectedProducts.has(id));\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen p-6\">\r\n      \r\n      {/* Notification */}\r\n      {notification && (\r\n        <div className={`fixed top-4 right-4 p-4 rounded-md shadow-md z-50 ${\r\n          notification.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\r\n        }`}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <span>{notification.message}</span>\r\n            <button onClick={() => setNotification(null)} className=\"ml-4 text-gray-400\">×</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-medium text-gray-800\">Product Stock</h1>\r\n        <div className=\"flex items-center space-x-3\">\r\n          {!isSelectionMode ? (\r\n            <>\r\n              <button \r\n                onClick={handleSelectModeToggle}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md flex items-center\"\r\n              >\r\n                Select Products\r\n              </button>\r\n              <button \r\n                onClick={() => navigate('/admin/products/add')}\r\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md flex items-center\"\r\n              >\r\n                <Plus size={16} className=\"mr-2\" />\r\n                Add New\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className=\"text-sm text-gray-600\">\r\n                {selectedProducts.size} selected\r\n              </span>\r\n              {selectedProducts.size > 0 && (\r\n                <button \r\n                  onClick={() => setShowBulkDeleteModal(true)}\r\n                  className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md flex items-center\"\r\n                >\r\n                  <Trash2 size={16} className=\"mr-2\" />\r\n                  Delete Selected\r\n                </button>\r\n              )}\r\n              <button \r\n                onClick={handleSelectModeToggle}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md flex items-center\"\r\n              >\r\n                <X size={16} className=\"mr-2\" />\r\n                Cancel\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Products Table */}\r\n      <div className=\"bg-white rounded-md shadow-sm overflow-hidden\">\r\n        <table className=\"w-full\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              {isSelectionMode && (\r\n                <th className=\"px-4 py-3 text-left\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={allCurrentPageSelected}\r\n                    onChange={handleSelectAll}\r\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                  />\r\n                </th>\r\n              )}\r\n              <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">Image</th>\r\n              <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">Product</th>\r\n              <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">Category</th>\r\n              <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">Price</th>\r\n              <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">Stock</th>\r\n              <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {isLoading ? (\r\n              <tr>\r\n                <td colSpan={isSelectionMode ? \"7\" : \"6\"} className=\"px-4 py-8 text-center\">\r\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\r\n                  <p className=\"text-gray-500 mt-2\">Loading products...</p>\r\n                </td>\r\n              </tr>\r\n            ) : products.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={isSelectionMode ? \"7\" : \"6\"} className=\"px-4 py-8 text-center\">\r\n                  <ShoppingBag size={48} className=\"text-gray-300 mx-auto mb-3\" />\r\n                  <p className=\"text-gray-500\">No products found</p>\r\n                  <button \r\n                    onClick={() => navigate('/admin/products/add')}\r\n                    className=\"text-blue-500 hover:underline mt-2\"\r\n                  >\r\n                    Add your first product\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              currentProducts.map((product) => (\r\n                <tr key={product.product_id} className=\"border-b hover:bg-gray-50\">\r\n                  {isSelectionMode && (\r\n                    <td className=\"px-4 py-3\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProducts.has(product.product_id)}\r\n                        onChange={() => handleProductSelect(product.product_id)}\r\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  <td className=\"px-4 py-3\">\r\n                    <div className=\"w-12 h-12 rounded-md overflow-hidden bg-gray-100\">\r\n                      <img \r\n                        src={product.images?.[0] || '/placeholder.jpg'} \r\n                        alt={product.name} \r\n                        className=\"w-full h-full object-cover\"\r\n                        onError={(e) => e.target.src = '/placeholder.jpg'}\r\n                      />\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-4 py-3\">\r\n                    <div className=\"font-medium text-gray-900\">{product.name}</div>\r\n                  </td>\r\n                  <td className=\"px-4 py-3\">\r\n                    <div className=\"text-gray-600 capitalize\">{product.category}</div>\r\n                  </td>\r\n                  <td className=\"px-4 py-3\">\r\n                    <div className=\"font-medium\">{formatPrice(product.price)}</div>\r\n                  </td>\r\n                  <td className=\"px-4 py-3\">\r\n                    <span className={`px-2 py-1 text-xs font-semibold rounded-full ${getStockColor(product.available_qty)}`}>\r\n                      {product.available_qty || 0}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-4 py-3\">\r\n                    <div className=\"flex space-x-3\">\r\n                      <button \r\n                        onClick={() => navigate(`/admin/products/edit/${product.product_id}`)}\r\n                        className=\"text-gray-500 hover:text-gray-700\"\r\n                        disabled={isSelectionMode}\r\n                      >\r\n                        <Edit size={16} />\r\n                      </button>\r\n                      <button \r\n                        onClick={() => {\r\n                          setActiveProduct(product);\r\n                          setShowDeleteModal(true);\r\n                        }}\r\n                        className=\"text-gray-500 hover:text-red-500\"\r\n                        disabled={isSelectionMode}\r\n                      >\r\n                        <Trash2 size={16} />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Pagination */}\r\n        {!isLoading && products.length > 0 && totalPages > 1 && (\r\n          <div className=\"px-4 py-4 flex justify-between items-center border-t\">\r\n            <p className=\"text-sm text-gray-500\">\r\n              Showing {startIndex + 1}-{Math.min(startIndex + itemsPerPage, products.length)} of {products.length}\r\n            </p>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button\r\n                onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\r\n                disabled={currentPage === 1}\r\n                className=\"p-2 rounded-md text-gray-500 hover:bg-gray-100 disabled:opacity-50\"\r\n              >\r\n                <ChevronLeft size={20} />\r\n              </button>\r\n              <span className=\"text-sm\">Page {currentPage} of {totalPages}</span>\r\n              <button\r\n                onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\r\n                disabled={currentPage === totalPages}\r\n                className=\"p-2 rounded-md text-gray-500 hover:bg-gray-100 disabled:opacity-50\"\r\n              >\r\n                <ChevronRight size={20} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Single Product Delete Modal */}\r\n      {showDeleteModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Confirm Delete</h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              Are you sure you want to delete \"{activeProduct?.name}\"? This action cannot be undone.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                onClick={() => setShowDeleteModal(false)}\r\n                className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleDelete}\r\n                className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 disabled:opacity-50\"\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? 'Deleting...' : 'Delete'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Bulk Delete Modal */}\r\n      {showBulkDeleteModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Confirm Bulk Delete</h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              Are you sure you want to delete {selectedProducts.size} selected product{selectedProducts.size > 1 ? 's' : ''}? This action cannot be undone.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                onClick={() => setShowBulkDeleteModal(false)}\r\n                className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n                disabled={isBulkDeleting}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleBulkDelete}\r\n                className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 disabled:opacity-50\"\r\n                disabled={isBulkDeleting}\r\n              >\r\n                {isBulkDeleting ? 'Deleting...' : `Delete ${selectedProducts.size} Product${selectedProducts.size > 1 ? 's' : ''}`}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductStockPage;"],"names":["__iconNode","SquarePen","createLucideIcon","ProductStockPage","navigate","useNavigate","products","setProducts","useState","isLoading","setIsLoading","currentPage","setCurrentPage","notification","setNotification","showDeleteModal","setShowDeleteModal","activeProduct","setActiveProduct","isSubmitting","setIsSubmitting","isSelectionMode","setIsSelectionMode","selectedProducts","setSelectedProducts","showBulkDeleteModal","setShowBulkDeleteModal","isBulkDeleting","setIsBulkDeleting","itemsPerPage","useEffect","fetchProducts","response","productService","error","handleDelete","prev","p","handleSelectModeToggle","handleProductSelect","productId","newSelected","handleSelectAll","currentProductIds","currentProducts","allCurrentSelected","id","handleBulkDelete","selectedProductIds","deletePromises","results","successfulDeletions","failedDeletions","result","index","_a","formatPrice","price","getStockColor","quantity","stock","totalPages","startIndex","currentPageProductIds","allCurrentPageSelected","jsxs","jsx","Fragment","Trash2","X","Plus","ShoppingBag","product","e","Edit","ChevronLeft","ChevronRight"],"mappings":"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","x_google_ignoreList":[0]}