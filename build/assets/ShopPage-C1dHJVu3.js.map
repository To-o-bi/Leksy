{"version":3,"file":"ShopPage-C1dHJVu3.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../src/components/product/ProductGrid.jsx","../../src/utils/api.js","../../src/components/product/ProductFilters.jsx","../../src/components/common/Pagination.jsx","../../src/components/shop/Hero.jsx","../../src/pages/public/ShopPage.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.487.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","import React from 'react';\r\nimport ProductCard from './ProductCard';\r\n\r\nconst ProductGrid = ({ products }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 md:gap-6\">\r\n      {products && products.length > 0 ? (\r\n        products.map((product) => (\r\n          <ProductCard key={product.id} product={product} />\r\n        ))\r\n      ) : (\r\n        <div className=\"col-span-full text-center py-12\">\r\n          <p className=\"text-gray-500 text-lg\">No products found.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductGrid;","// utils/api.js\r\n\r\nconst BASE_URL = 'https://leksycosmetics.com/api';\r\n\r\n// Helper function to handle API errors\r\nexport const handleApiError = (error, defaultMessage = 'An error occurred') => {\r\n  console.error('API Error:', error);\r\n  \r\n  if (error.response) {\r\n    // Server responded with error status\r\n    return error.response.data?.message || defaultMessage;\r\n  } else if (error.request) {\r\n    // Network error\r\n    return 'Network error. Please check your connection.';\r\n  } else {\r\n    // Other error\r\n    return error.message || defaultMessage;\r\n  }\r\n};\r\n\r\n// Fetch a single product by ID\r\nexport const fetchProduct = async (productId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/fetch-product?product_id=${productId}`);\r\n    const data = await response.json();\r\n    \r\n    if (response.ok && data.code === 200) {\r\n      return {\r\n        success: true,\r\n        product: data.product\r\n      };\r\n    } else {\r\n      throw new Error(data.message || 'Failed to fetch product');\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: handleApiError(error, 'Failed to fetch product')\r\n    };\r\n  }\r\n};\r\n\r\n// Fetch products with optional filtering and sorting\r\nexport const fetchProducts = async (options = {}) => {\r\n  try {\r\n    const {\r\n      category = '',\r\n      categories = [],\r\n      concerns = [], // Note: This might not be supported by your backend\r\n      search = '', // Note: This might not be supported by your backend\r\n      sort = '',\r\n      limit = '',\r\n      productIds = []\r\n    } = options;\r\n\r\n    // Build query parameters\r\n    const params = new URLSearchParams();\r\n    \r\n    // Handle category filtering - convert to backend format\r\n    const filterCategories = [];\r\n    if (category) {\r\n      filterCategories.push(category);\r\n    }\r\n    if (categories.length > 0) {\r\n      filterCategories.push(...categories);\r\n    }\r\n    \r\n    if (filterCategories.length > 0) {\r\n      // Backend expects comma-separated filter parameter\r\n      params.append('filter', filterCategories.join(','));\r\n    }\r\n    \r\n    // Handle specific product IDs\r\n    if (productIds.length > 0) {\r\n      params.append('products_ids_array', productIds.join(','));\r\n    }\r\n    \r\n    // Handle sorting\r\n    if (sort) {\r\n      params.append('sort', sort);\r\n    }\r\n    \r\n    // Handle limit\r\n    if (limit) {\r\n      params.append('limit', limit.toString());\r\n    }\r\n    \r\n    // Note: Search and concerns filtering might need backend support\r\n    // For now, we'll handle these client-side\r\n    \r\n    const url = `${BASE_URL}/fetch-products${params.toString() ? '?' + params.toString() : ''}`;\r\n    console.log('Fetching products from:', url); // Debug log\r\n    \r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    \r\n    if (response.ok && data.code === 200) {\r\n      let products = data.products || [];\r\n      \r\n      // Client-side filtering for features not supported by backend\r\n      \r\n      // Apply search filter if provided\r\n      if (search && search.trim()) {\r\n        const searchTerm = search.toLowerCase().trim();\r\n        products = products.filter(product => \r\n          product.name.toLowerCase().includes(searchTerm) ||\r\n          product.description.toLowerCase().includes(searchTerm) ||\r\n          product.category.toLowerCase().includes(searchTerm)\r\n        );\r\n      }\r\n      \r\n      // Apply concerns filter if provided (client-side)\r\n      if (concerns.length > 0) {\r\n        // This is a placeholder - you'd need to implement concern matching\r\n        // based on your product data structure\r\n        console.log('Concerns filtering not implemented in backend, applying client-side filter');\r\n        \r\n        // For now, we'll filter based on product name/description containing concern keywords\r\n        products = products.filter(product => {\r\n          const productText = `${product.name} ${product.description}`.toLowerCase();\r\n          return concerns.some(concern => {\r\n            const concernKeywords = {\r\n              'Anti-Aging': ['anti-aging', 'anti aging', 'wrinkle', 'fine lines', 'aging'],\r\n              'Oily Skin': ['oily', 'oil control', 'sebum'],\r\n              'Dry Skin': ['dry', 'hydrating', 'moisturizing', 'moisture'],\r\n              'Acne': ['acne', 'blemish', 'pimple', 'breakout'],\r\n              'Hyperpigmentation': ['hyperpigmentation', 'dark spots', 'pigmentation', 'brightening'],\r\n              'Sensitive skin': ['sensitive', 'gentle', 'soothing', 'calming']\r\n            };\r\n            \r\n            const keywords = concernKeywords[concern] || [concern.toLowerCase()];\r\n            return keywords.some(keyword => productText.includes(keyword));\r\n          });\r\n        });\r\n      }\r\n      \r\n      return {\r\n        success: true,\r\n        products: products,\r\n        totalCount: products.length,\r\n        message: data.message\r\n      };\r\n    } else {\r\n      throw new Error(data.message || 'Failed to fetch products');\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: handleApiError(error, 'Failed to fetch products'),\r\n      products: [],\r\n      totalCount: 0\r\n    };\r\n  }\r\n};\r\n\r\n// Fetch products by specific IDs (for cart, wishlist, etc.)\r\nexport const fetchProductsByIds = async (productIds) => {\r\n  if (!productIds || productIds.length === 0) {\r\n    return {\r\n      success: true,\r\n      products: [],\r\n      totalCount: 0\r\n    };\r\n  }\r\n  \r\n  return fetchProducts({ productIds });\r\n};\r\n\r\n// Get available categories (you might want to add this to your backend)\r\nexport const getCategories = () => {\r\n  return [\r\n    'serums',\r\n    'moisturizers',\r\n    'bathe and body',\r\n    'sunscreens',\r\n    'toners',\r\n    'face cleansers'\r\n  ];\r\n};\r\n\r\n// Get category display names\r\nexport const getCategoryDisplayName = (category) => {\r\n  const categoryDisplayNames = {\r\n    'serums': 'Serums',\r\n    'moisturizers': 'Moisturizers',\r\n    'bathe and body': 'Bathe and Body',\r\n    'sunscreens': 'Sunscreens',\r\n    'toners': 'Toners',\r\n    'face cleansers': 'Face Cleansers'\r\n  };\r\n  return categoryDisplayNames[category] || category;\r\n};\r\n\r\n// Get available skin concerns\r\nexport const getSkinConcerns = () => {\r\n  return [\r\n    'Anti-Aging',\r\n    'Oily Skin',\r\n    'Dry Skin',\r\n    'Acne',\r\n    'Hyperpigmentation',\r\n    'Sensitive skin'\r\n  ];\r\n};","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport { ChevronDown } from 'lucide-react';\r\nimport { getCategories, getCategoryDisplayName, getSkinConcerns } from '../../utils/api';\r\n\r\nexport default function ProductFilters({ selectedFilters, onFilterChange, horizontal = false, compact = false }) {\r\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('category');\r\n  const [skinConcerns, setSkinConcerns] = useState({});\r\n  \r\n  const filterRef = useRef(null);\r\n\r\n  // Get categories and concerns from utils - memoize to prevent re-computation\r\n  const categories = useMemo(() => getCategories(), []);\r\n  const availableConcerns = useMemo(() => getSkinConcerns(), []);\r\n\r\n  // Initialize skin concerns state - only run once\r\n  useEffect(() => {\r\n    const initialConcerns = {};\r\n    availableConcerns.forEach(concern => {\r\n      initialConcerns[concern] = false;\r\n    });\r\n    setSkinConcerns(initialConcerns);\r\n  }, [availableConcerns]);\r\n\r\n  // Update skinConcerns state when selectedFilters.concerns changes\r\n  // Use JSON.stringify for deep comparison to prevent unnecessary updates\r\n  const selectedConcernsString = useMemo(() => \r\n    JSON.stringify(selectedFilters.concerns || []), \r\n    [selectedFilters.concerns]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const selectedConcernsArray = JSON.parse(selectedConcernsString);\r\n    \r\n    if (selectedConcernsArray && selectedConcernsArray.length > 0) {\r\n      const newConcernState = {};\r\n      \r\n      // Initialize all concerns to false\r\n      availableConcerns.forEach(concern => {\r\n        newConcernState[concern] = false;\r\n      });\r\n      \r\n      // Set selected ones to true\r\n      selectedConcernsArray.forEach(concern => {\r\n        if (availableConcerns.includes(concern)) {\r\n          newConcernState[concern] = true;\r\n        }\r\n      });\r\n      \r\n      setSkinConcerns(newConcernState);\r\n    } else {\r\n      // Reset all concerns if none are selected\r\n      const resetConcerns = {};\r\n      availableConcerns.forEach(concern => {\r\n        resetConcerns[concern] = false;\r\n      });\r\n      setSkinConcerns(resetConcerns);\r\n    }\r\n  }, [selectedConcernsString, availableConcerns]);\r\n\r\n  // Handle click outside to close dropdown\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (filterRef.current && !filterRef.current.contains(event.target)) {\r\n        setIsFilterOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const toggleFilter = useCallback(() => {\r\n    setIsFilterOpen(prev => {\r\n      if (!prev) {\r\n        // Default to category tab when opening\r\n        setActiveTab('category');\r\n      }\r\n      return !prev;\r\n    });\r\n  }, []);\r\n\r\n  const selectCategory = useCallback((category) => {\r\n    onFilterChange({ category });\r\n    setIsFilterOpen(false);\r\n  }, [onFilterChange]);\r\n\r\n  const toggleConcern = useCallback((concern) => {\r\n    // Calculate new state without relying on setSkinConcerns callback\r\n    const isCurrentlySelected = skinConcerns[concern] || false;\r\n    const newConcernState = {\r\n      ...skinConcerns,\r\n      [concern]: !isCurrentlySelected\r\n    };\r\n    \r\n    setSkinConcerns(newConcernState);\r\n    \r\n    // Update selected concerns in parent component\r\n    const selectedConcerns = Object.entries(newConcernState)\r\n      .filter(([_, isSelected]) => isSelected)\r\n      .map(([concernName]) => concernName);\r\n      \r\n    onFilterChange({ concerns: selectedConcerns });\r\n  }, [onFilterChange, skinConcerns]);\r\n\r\n  const removeConcern = useCallback((concernToRemove) => {\r\n    if (!selectedFilters.concerns) return;\r\n    \r\n    const updatedConcerns = selectedFilters.concerns.filter(concern => concern !== concernToRemove);\r\n    onFilterChange({ concerns: updatedConcerns });\r\n  }, [onFilterChange, selectedFilters.concerns]);\r\n\r\n  // Memoize computed values to prevent unnecessary recalculations\r\n  const hasCategory = useMemo(() => \r\n    selectedFilters.category && selectedFilters.category !== '', \r\n    [selectedFilters.category]\r\n  );\r\n  \r\n  const hasConcerns = useMemo(() => \r\n    selectedFilters.concerns && selectedFilters.concerns.length > 0, \r\n    [selectedFilters.concerns]\r\n  );\r\n  \r\n  const hasFilters = useMemo(() => \r\n    hasCategory || hasConcerns, \r\n    [hasCategory, hasConcerns]\r\n  );\r\n\r\n  // Determine what to display in the filter button - memoized\r\n  const buttonLabel = useMemo(() => {\r\n    if (hasCategory && !hasConcerns) {\r\n      return getCategoryDisplayName(selectedFilters.category);\r\n    } else if (!hasCategory && hasConcerns) {\r\n      return `${selectedFilters.concerns.length} Concern${selectedFilters.concerns.length > 1 ? 's' : ''}`;\r\n    } else if (hasCategory && hasConcerns) {\r\n      const categoryName = getCategoryDisplayName(selectedFilters.category);\r\n      return `${categoryName} + ${selectedFilters.concerns.length} Concern${selectedFilters.concerns.length > 1 ? 's' : ''}`;\r\n    } else {\r\n      return 'All Products';\r\n    }\r\n  }, [hasCategory, hasConcerns, selectedFilters.category, selectedFilters.concerns]);\r\n\r\n  return (\r\n    <div className={`font-sans ${horizontal ? 'flex flex-wrap items-start gap-4' : 'p-4'}`}>\r\n      {/* Combined Filter Dropdown */}\r\n      <div className=\"relative\" ref={filterRef}>\r\n        <button\r\n          onClick={toggleFilter}\r\n          className={`flex items-center justify-between px-4 py-2 bg-white border ${\r\n            hasFilters ? 'border-pink-300 bg-pink-50' : 'border-gray-300'\r\n          } rounded-md shadow-sm hover:border-pink-400 transition-colors ${\r\n            horizontal ? 'w-auto min-w-40' : 'w-64'\r\n          } focus:outline-none focus:ring-2 focus:ring-pink-300 focus:border-pink-300`}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={isFilterOpen}\r\n        >\r\n          <span className={`${hasFilters ? 'text-pink-600' : 'text-gray-600'} truncate`}>\r\n            {buttonLabel}\r\n          </span>\r\n          <ChevronDown \r\n            className={`w-4 h-4 ${hasFilters ? 'text-pink-500' : 'text-gray-500'} ml-2 transition-transform ${\r\n              isFilterOpen ? 'rotate-180' : ''\r\n            }`} \r\n          />\r\n        </button>\r\n\r\n        {/* Combined dropdown with tabs - FIXED Z-INDEX AND POSITIONING */}\r\n        {isFilterOpen && (\r\n          <div className=\"absolute z-50 w-64 mt-1 bg-white border border-gray-200 rounded-md shadow-lg right-0\">\r\n            {/* Tab headers */}\r\n            <div className=\"flex border-b border-gray-200\">\r\n              <button\r\n                onClick={() => setActiveTab('category')}\r\n                className={`flex-1 py-2 text-center text-sm font-medium transition-colors ${\r\n                  activeTab === 'category' \r\n                    ? 'text-pink-600 border-b-2 border-pink-500 bg-pink-50' \r\n                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                Categories\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('concern')}\r\n                className={`flex-1 py-2 text-center text-sm font-medium transition-colors ${\r\n                  activeTab === 'concern' \r\n                    ? 'text-pink-600 border-b-2 border-pink-500 bg-pink-50' \r\n                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                Concerns\r\n              </button>\r\n            </div>\r\n\r\n            {/* Tab content */}\r\n            {activeTab === 'category' ? (\r\n              <div className=\"max-h-60 overflow-y-auto\">\r\n                {/* All Products option */}\r\n                <button\r\n                  onClick={() => selectCategory('')}\r\n                  className={`w-full px-4 py-2 text-left text-sm hover:bg-gray-100 transition-colors ${\r\n                    !selectedFilters.category || selectedFilters.category === '' \r\n                      ? 'bg-pink-100 text-pink-800 font-medium' \r\n                      : 'text-gray-700'\r\n                  }`}\r\n                >\r\n                  All Products\r\n                </button>\r\n                \r\n                {/* Category options */}\r\n                {categories.map((category) => (\r\n                  <button\r\n                    key={category}\r\n                    onClick={() => selectCategory(category)}\r\n                    className={`w-full px-4 py-2 text-left text-sm hover:bg-gray-100 transition-colors ${\r\n                      selectedFilters.category === category \r\n                        ? 'bg-pink-100 text-pink-800 font-medium' \r\n                        : 'text-gray-700'\r\n                    }`}\r\n                  >\r\n                    {getCategoryDisplayName(category)}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"p-3\">\r\n                <p className=\"text-sm font-medium text-gray-700 mb-3\">Select skin concerns:</p>\r\n                <div className=\"space-y-2\">\r\n                  {availableConcerns.map((concern) => (\r\n                    <label \r\n                      key={concern} \r\n                      className=\"flex items-center cursor-pointer hover:bg-gray-50 rounded p-1 transition-colors\"\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={skinConcerns[concern] || false}\r\n                        onChange={() => toggleConcern(concern)}\r\n                        className=\"w-4 h-4 mr-3 border-gray-300 rounded text-pink-500 focus:ring-pink-300 focus:ring-2\"\r\n                      />\r\n                      <span className=\"text-sm text-gray-700 select-none\">\r\n                        {concern}\r\n                      </span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n                \r\n                {/* Clear concerns button */}\r\n                {hasConcerns && (\r\n                  <button\r\n                    onClick={() => onFilterChange({ concerns: [] })}\r\n                    className=\"w-full mt-3 px-3 py-1 text-sm text-pink-600 hover:text-pink-800 hover:bg-pink-50 rounded transition-colors\"\r\n                  >\r\n                    Clear all concerns\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Display selected filters on separate lines (when not compact) */}\r\n      {!compact && hasFilters && (\r\n        <div className={`flex flex-col ${horizontal ? 'ml-4' : 'mt-4'}`}>\r\n          {hasCategory && (\r\n            <div className=\"mb-3\">\r\n              <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Selected Category:</h3>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                <span className=\"px-3 py-1 text-sm bg-pink-100 text-pink-800 rounded-full inline-flex items-center\">\r\n                  {getCategoryDisplayName(selectedFilters.category)}\r\n                  <button \r\n                    onClick={() => onFilterChange({ category: '' })}\r\n                    className=\"ml-2 text-pink-600 hover:text-pink-800 focus:outline-none\"\r\n                    aria-label={`Remove ${getCategoryDisplayName(selectedFilters.category)} filter`}\r\n                  >\r\n                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                    </svg>\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {hasConcerns && (\r\n            <div className=\"mb-2\">\r\n              <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Selected Concerns:</h3>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {selectedFilters.concerns?.map((concern) => (\r\n                  <span key={concern} className=\"px-3 py-1 text-sm bg-pink-100 text-pink-800 rounded-full inline-flex items-center\">\r\n                    {concern}\r\n                    <button \r\n                      onClick={() => removeConcern(concern)}\r\n                      className=\"ml-2 text-pink-600 hover:text-pink-800 focus:outline-none\"\r\n                      aria-label={`Remove ${concern} filter`}\r\n                    >\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  // Return null if there's only one page or less\r\n  if (totalPages <= 1) return null;\r\n\r\n  // Generate page numbers to display\r\n  const getPageNumbers = () => {\r\n    const pages = [];\r\n    \r\n    // Logic to show limited page numbers with ellipsis for better UX\r\n    if (totalPages <= 7) {\r\n      // If 7 or fewer pages, show all\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n      }\r\n    } else {\r\n      // Always show first page\r\n      pages.push(1);\r\n      \r\n      // Determine start and end of current page group\r\n      let startPage, endPage;\r\n      \r\n      if (currentPage <= 3) {\r\n        // Near the beginning\r\n        startPage = 2;\r\n        endPage = 5;\r\n        pages.push(...Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i));\r\n        pages.push('ellipsis');\r\n        pages.push(totalPages);\r\n      } else if (currentPage >= totalPages - 2) {\r\n        // Near the end\r\n        pages.push('ellipsis');\r\n        startPage = totalPages - 4;\r\n        endPage = totalPages - 1;\r\n        pages.push(...Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i));\r\n        pages.push(totalPages);\r\n      } else {\r\n        // Somewhere in the middle\r\n        pages.push('ellipsis');\r\n        startPage = currentPage - 1;\r\n        endPage = currentPage + 1;\r\n        pages.push(...Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i));\r\n        pages.push('ellipsis');\r\n        pages.push(totalPages);\r\n      }\r\n    }\r\n    \r\n    return pages;\r\n  };\r\n  \r\n  // Get the array of page numbers to display\r\n  const pages = getPageNumbers();\r\n  \r\n  return (\r\n    <div className=\"flex items-center justify-center space-x-1\">\r\n      {/* Previous button */}\r\n      <button\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n        className={`px-3 py-2 rounded-md ${\r\n          currentPage === 1\r\n            ? 'text-gray-400 cursor-not-allowed'\r\n            : 'text-gray-700 hover:bg-pink-100'\r\n        }`}\r\n        aria-label=\"Previous page\"\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-5 w-5\"\r\n          viewBox=\"0 0 20 20\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      </button>\r\n      \r\n      {/* Page numbers */}\r\n      {pages.map((page, index) => (\r\n        <React.Fragment key={index}>\r\n          {page === 'ellipsis' ? (\r\n            <span className=\"px-3 py-2 text-gray-500\">...</span>\r\n          ) : (\r\n            <button\r\n              onClick={() => onPageChange(page)}\r\n              className={`px-3 py-2 rounded-md ${\r\n                currentPage === page\r\n                  ? 'bg-pink-500 text-white font-medium'\r\n                  : 'text-gray-700 hover:bg-pink-100'\r\n              }`}\r\n              aria-current={currentPage === page ? 'page' : undefined}\r\n              aria-label={`Page ${page}`}\r\n            >\r\n              {page}\r\n            </button>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n      \r\n      {/* Next button */}\r\n      <button\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n        className={`px-3 py-2 rounded-md ${\r\n          currentPage === totalPages\r\n            ? 'text-gray-400 cursor-not-allowed'\r\n            : 'text-gray-700 hover:bg-pink-100'\r\n        }`}\r\n        aria-label=\"Next page\"\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-5 w-5\"\r\n          viewBox=\"0 0 20 20\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","// components/HeroBanner.jsx\r\nimport { ArrowRight } from \"lucide-react\";\r\n\r\nconst HeroBanner = () => {\r\n  return (\r\n    <div className=\"container mx-auto px-6\">\r\n      <div className=\"rounded-lg overflow-hidden bg-gradient-to-r from-pink-100 to-pink-200 relative\">\r\n        <div className=\"flex items-center p-8\">\r\n          <div className=\"w-1/2\">\r\n            <div className=\"uppercase text-pink-500 font-medium text-sm mb-2\">\r\n              BEST DEALS\r\n            </div>\r\n            <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">\r\n              Sale of the Month\r\n            </h1>\r\n\r\n            {/* Countdown Timer */}\r\n            <div className=\"flex space-x-2 mb-6\">\r\n              {[\r\n                { label: \"DAYS\", value: \"00\" },\r\n                { label: \"HOURS\", value: \"06\" },\r\n                { label: \"MINS\", value: \"38\" },\r\n                { label: \"SECS\", value: \"45\" },\r\n              ].map((item, index) => (\r\n                <div className=\"flex flex-col items-center\" key={index}>\r\n                  <div className=\"bg-white rounded px-3 py-2 text-center\">\r\n                    <span className=\"text-lg font-bold\">{item.value}</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-gray-500 mt-1\">\r\n                    {item.label}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <button className=\"bg-pink-500 text-white px-4 py-2 rounded-full flex items-center text-sm\">\r\n              Shop Now <ArrowRight className=\"ml-2 w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"w-1/2 flex justify-end\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute -top-4 -left-8 bg-pink-500 text-white text-sm font-bold rounded-full w-16 h-16 flex flex-col items-center justify-center\">\r\n                <span>56%</span>\r\n                <span className=\"text-xs\">OFF</span>\r\n              </div>\r\n              <img\r\n                src=\"/api/placeholder/300/250\"\r\n                alt=\"April Combo Sales\"\r\n                className=\"max-h-64\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroBanner;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport ProductGrid from '../../components/product/ProductGrid';\r\nimport ProductFilters from '../../components/product/ProductFilters';\r\nimport Breadcrumb from '../../components/common/Breadcrumb';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport Loader from '../../components/common/Loader';\r\nimport Hero from '../../components/shop/Hero';\r\nimport { fetchProducts, handleApiError, getCategoryDisplayName } from '../../utils/api';\r\n\r\nconst ShopPage = () => { \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  const [products, setProducts] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]); // Store all products for client-side pagination\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    category: '',\r\n    concerns: []\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [showMobileFilters, setShowMobileFilters] = useState(false);\r\n  const [totalProductsCount, setTotalProductsCount] = useState(0);\r\n  \r\n  const productsPerPage = 20;\r\n  \r\n  // Fetch products from API with filters\r\n  const fetchProductsData = useCallback(async (filters = {}, search = '') => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await fetchProducts({\r\n        category: filters.category || '',\r\n        concerns: filters.concerns || [],\r\n        search: search || '',\r\n        sort: 'name',\r\n        limit: 1000 // Fetch more products to handle client-side pagination properly\r\n      });\r\n\r\n      if (result.success) {\r\n        setAllProducts(result.products);\r\n        setTotalProductsCount(result.totalCount);\r\n        \r\n        // Calculate pagination\r\n        const totalPages = Math.ceil(result.totalCount / productsPerPage);\r\n        setTotalPages(totalPages);\r\n        \r\n        // Set current page products\r\n        updateCurrentPageProducts(result.products, 1);\r\n        setCurrentPage(1); // Reset to first page when filters change\r\n      } else {\r\n        throw new Error(result.error || 'Failed to fetch products');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching products:', err);\r\n      setError(handleApiError(err, 'Failed to fetch products. Please try again.'));\r\n      setProducts([]);\r\n      setAllProducts([]);\r\n      setTotalProductsCount(0);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Update products for current page\r\n  const updateCurrentPageProducts = useCallback((productList, page) => {\r\n    const startIndex = (page - 1) * productsPerPage;\r\n    const endIndex = startIndex + productsPerPage;\r\n    const paginatedProducts = productList.slice(startIndex, endIndex);\r\n    setProducts(paginatedProducts);\r\n  }, []);\r\n\r\n  // Extract category from URL parameters and concerns from location state\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const categoryParam = queryParams.get('category');\r\n    \r\n    const newFilters = { ...selectedFilters };\r\n    \r\n    if (categoryParam) {\r\n      newFilters.category = categoryParam;\r\n    }\r\n    \r\n    // Handle concerns from location state (e.g., from homepage concern buttons)\r\n    if (location.state?.filterByConcern && location.state?.concerns) {\r\n      newFilters.concerns = location.state.concerns;\r\n    }\r\n    \r\n    // Only update if filters actually changed\r\n    if (\r\n      newFilters.category !== selectedFilters.category ||\r\n      JSON.stringify(newFilters.concerns) !== JSON.stringify(selectedFilters.concerns)\r\n    ) {\r\n      setSelectedFilters(newFilters);\r\n      \r\n      // Clear location state after processing\r\n      if (location.state?.filterByConcern) {\r\n        navigate(location.pathname + location.search, { replace: true, state: {} });\r\n      }\r\n    }\r\n  }, [location, navigate, selectedFilters]);\r\n\r\n  // Fetch products when filters or search changes\r\n  useEffect(() => {\r\n    fetchProductsData(selectedFilters, searchQuery);\r\n  }, [fetchProductsData, selectedFilters, searchQuery]);\r\n\r\n  // Update current page products when page changes\r\n  useEffect(() => {\r\n    if (allProducts.length > 0) {\r\n      updateCurrentPageProducts(allProducts, currentPage);\r\n    }\r\n  }, [allProducts, currentPage, updateCurrentPageProducts]);\r\n\r\n  // Search handler with debouncing\r\n  const handleSearchChange = useCallback((e) => {\r\n    const value = e.target.value;\r\n    setSearchQuery(value);\r\n  }, []);\r\n\r\n  // Filter change handler\r\n  const handleFilterChange = useCallback((filters) => {\r\n    setSelectedFilters(prev => {\r\n      const newFilters = { ...prev, ...filters };\r\n      \r\n      // Update URL with new category\r\n      if (filters.category !== undefined && filters.category !== prev.category) {\r\n        const searchParams = new URLSearchParams(location.search);\r\n        \r\n        if (filters.category && filters.category !== '') {\r\n          searchParams.set('category', filters.category);\r\n        } else {\r\n          searchParams.delete('category');\r\n        }\r\n        \r\n        navigate({\r\n          pathname: location.pathname,\r\n          search: searchParams.toString()\r\n        }, { replace: true });\r\n      }\r\n      \r\n      return newFilters;\r\n    });\r\n  }, [location.search, location.pathname, navigate]);\r\n  \r\n  // Page change handler\r\n  const handlePageChange = useCallback((page) => {\r\n    setCurrentPage(page);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }, []);\r\n  \r\n  // Clear all filters\r\n  const clearAllFilters = useCallback(() => {\r\n    setSelectedFilters({\r\n      category: '',\r\n      concerns: []\r\n    });\r\n    setSearchQuery('');\r\n    setCurrentPage(1);\r\n    navigate(location.pathname, { replace: true });\r\n  }, [navigate, location.pathname]);\r\n  \r\n  // Retry handler\r\n  const handleRetry = useCallback(() => {\r\n    fetchProductsData(selectedFilters, searchQuery);\r\n  }, [fetchProductsData, selectedFilters, searchQuery]);\r\n  \r\n  if (loading && allProducts.length === 0) {\r\n    return (\r\n      <div className=\"w-[90%] mx-auto py-16\">\r\n        <div className=\"text-center\">\r\n          <Loader />\r\n          <p className=\"mt-4 text-gray-600\">Loading products...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && allProducts.length === 0) {\r\n    return (\r\n      <div className=\"w-[90%] mx-auto py-16 text-center\">\r\n        <h2 className=\"text-2xl font-semibold text-red-600\">Error Loading Products</h2>\r\n        <p className=\"mt-2 text-gray-600\">{error}</p>\r\n        <div className=\"mt-6 flex flex-col sm:flex-row justify-center gap-4\">\r\n          <button \r\n            className=\"px-6 py-2 bg-pink-500 text-white rounded-md hover:bg-pink-600 transition-colors\"\r\n            onClick={handleRetry}\r\n          >\r\n            Try Again\r\n          </button>\r\n          <button \r\n            className=\"px-6 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors\"\r\n            onClick={() => navigate('/')}\r\n          >\r\n            Back to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const hasActiveFilters = selectedFilters.category || selectedFilters.concerns.length > 0 || searchQuery.trim();\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      {/* Breadcrumb navigation */}\r\n      <Breadcrumb \r\n        items={[\r\n          { label: 'Home', path: '/' },\r\n          { label: 'Shop', path: '/shop' },\r\n          ...(selectedFilters.category ? [{ \r\n            label: getCategoryDisplayName(selectedFilters.category), \r\n            path: `/shop?category=${encodeURIComponent(selectedFilters.category)}` \r\n          }] : [])\r\n        ]} \r\n      />\r\n      \r\n      {/* Hero banner */}\r\n      <Hero />\r\n      \r\n      {/* Content - 90% width */}\r\n      <div className=\"w-[87%] mx-auto py-8\">\r\n        \r\n        {/* Filters and search */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n            {/* Search */}\r\n            <div className=\"relative w-full md:w-auto\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search products...\"\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n                className=\"w-full md:w-64 pl-8 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-300 focus:border-pink-300\"\r\n              />\r\n              <svg \r\n                className=\"w-4 h-4 absolute left-2.5 top-3 text-gray-400\" \r\n                fill=\"none\" \r\n                stroke=\"currentColor\" \r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n              </svg>\r\n            </div>\r\n            \r\n            {/* Filter controls */}\r\n            <div className=\"flex flex-wrap items-center gap-4 w-full md:w-auto\">\r\n              <div className=\"text-sm text-gray-600 flex-grow md:flex-grow-0\">\r\n                {loading ? (\r\n                  'Loading...'\r\n                ) : (\r\n                  <>\r\n                    Showing {products.length} of {totalProductsCount} products\r\n                    {currentPage > 1 && ` (Page ${currentPage})`}\r\n                  </>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Desktop filters */}\r\n              <div className=\"hidden md:flex gap-6 flex-wrap\">\r\n                <ProductFilters \r\n                  selectedFilters={selectedFilters}\r\n                  onFilterChange={handleFilterChange}\r\n                  horizontal={true}\r\n                  compact={true}\r\n                />\r\n              </div>\r\n              \r\n              {/* Mobile filter button */}\r\n              <button \r\n                className=\"md:hidden flex items-center gap-2 px-4 py-2 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\r\n                onClick={() => setShowMobileFilters(!showMobileFilters)}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\"></path>\r\n                </svg>\r\n                Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Mobile filters */}\r\n          {showMobileFilters && (\r\n            <div className=\"md:hidden bg-gray-50 p-4 rounded-md mb-4\">\r\n              <ProductFilters \r\n                selectedFilters={selectedFilters}\r\n                onFilterChange={handleFilterChange}\r\n                compact={true}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          {/* Active filters display */}\r\n          {hasActiveFilters && (\r\n            <div className=\"bg-gray-50 p-4 rounded-md mb-6 flex flex-col md:flex-row items-start md:items-center justify-between\">\r\n              <div className=\"flex flex-wrap gap-2 items-center mb-3 md:mb-0\">\r\n                <span className=\"text-sm text-gray-700 font-medium\">Active filters:</span>\r\n                \r\n                {selectedFilters.category && (\r\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-pink-100 text-pink-800\">\r\n                    {getCategoryDisplayName(selectedFilters.category)}\r\n                    <button \r\n                      onClick={() => handleFilterChange({ category: '' })}\r\n                      className=\"ml-2 focus:outline-none hover:text-pink-900\"\r\n                    >\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </span>\r\n                )}\r\n                \r\n                {selectedFilters.concerns.map((concern, index) => (\r\n                  <span key={index} className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-pink-100 text-pink-800\">\r\n                    {concern}\r\n                    <button \r\n                      onClick={() => {\r\n                        const updatedConcerns = selectedFilters.concerns.filter(c => c !== concern);\r\n                        handleFilterChange({ concerns: updatedConcerns });\r\n                      }}\r\n                      className=\"ml-2 focus:outline-none hover:text-pink-900\"\r\n                    >\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n                \r\n                {searchQuery.trim() && (\r\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-pink-100 text-pink-800\">\r\n                    Search: \"{searchQuery}\"\r\n                    <button \r\n                      onClick={() => setSearchQuery('')}\r\n                      className=\"ml-2 focus:outline-none hover:text-pink-900\"\r\n                    >\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </span>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Clear all filters button */}\r\n              <button \r\n                onClick={clearAllFilters}\r\n                className=\"text-sm text-pink-600 hover:text-pink-800 font-medium flex items-center transition-colors\"\r\n              >\r\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                </svg>\r\n                Clear all filters\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Loading overlay for filter changes */}\r\n        {loading && allProducts.length > 0 && (\r\n          <div className=\"relative\">\r\n            <div className=\"absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center z-10 rounded-md\">\r\n              <Loader />\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Product grid */}\r\n        <ProductGrid products={products} />\r\n        \r\n        {/* No products found */}\r\n        {products.length === 0 && !loading && !error && (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-5xl mb-4\">😕</div>\r\n            <h3 className=\"text-xl font-medium text-gray-800 mb-2\">No products found</h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              {hasActiveFilters \r\n                ? 'Try adjusting your filters or search criteria' \r\n                : 'No products available at the moment'\r\n              }\r\n            </p>\r\n            {hasActiveFilters && (\r\n              <button \r\n                onClick={clearAllFilters}\r\n                className=\"px-6 py-2 bg-pink-500 text-white rounded-md hover:bg-pink-600 transition-colors\"\r\n              >\r\n                Clear all filters\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Pagination */}\r\n        {totalPages > 1 && products.length > 0 && (\r\n          <div className=\"mt-8 mb-12\">\r\n            <Pagination \r\n              currentPage={currentPage} \r\n              totalPages={totalPages} \r\n              onPageChange={handlePageChange} \r\n            />\r\n            <div className=\"text-center mt-4 text-sm text-gray-500\">\r\n              Page {currentPage} of {totalPages} • Showing {products.length} products • {totalProductsCount} total\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopPage;"],"names":["__iconNode","ArrowRight","createLucideIcon","ProductGrid","products","jsx","product","ProductCard","BASE_URL","handleApiError","error","defaultMessage","_a","fetchProducts","options","category","categories","concerns","search","sort","limit","productIds","params","filterCategories","url","response","data","searchTerm","productText","concern","keyword","getCategories","getCategoryDisplayName","getSkinConcerns","ProductFilters","selectedFilters","onFilterChange","horizontal","compact","isFilterOpen","setIsFilterOpen","useState","activeTab","setActiveTab","skinConcerns","setSkinConcerns","filterRef","useRef","useMemo","availableConcerns","useEffect","initialConcerns","selectedConcernsString","selectedConcernsArray","newConcernState","resetConcerns","handleClickOutside","event","toggleFilter","useCallback","prev","selectCategory","toggleConcern","isCurrentlySelected","selectedConcerns","_","isSelected","concernName","removeConcern","concernToRemove","updatedConcerns","hasCategory","hasConcerns","hasFilters","buttonLabel","jsxs","ChevronDown","Pagination","currentPage","totalPages","onPageChange","pages","i","startPage","endPage","page","index","React","HeroBanner","item","ShopPage","navigate","useNavigate","location","useLocation","setProducts","allProducts","setAllProducts","loading","setLoading","setError","setCurrentPage","setTotalPages","setSelectedFilters","searchQuery","setSearchQuery","showMobileFilters","setShowMobileFilters","totalProductsCount","setTotalProductsCount","productsPerPage","fetchProductsData","filters","result","updateCurrentPageProducts","err","productList","startIndex","endIndex","paginatedProducts","categoryParam","newFilters","_b","_c","handleSearchChange","e","value","handleFilterChange","searchParams","handlePageChange","clearAllFilters","handleRetry","Loader","hasActiveFilters","Breadcrumb","Hero","Fragment","c"],"mappings":"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","x_google_ignoreList":[0]}