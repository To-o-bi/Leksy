{"version":3,"file":"NewsletterAdmin-SpcaE054.js","sources":["../../node_modules/lucide-react/dist/esm/icons/download.js","../../src/admin/pages/NewsletterAdmin.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.487.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"polyline\", { points: \"7 10 12 15 17 10\", key: \"2ggqvy\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"15\", y2: \"3\", key: \"1vk2je\" }]\n];\nconst Download = createLucideIcon(\"download\", __iconNode);\n\nexport { __iconNode, Download as default };\n//# sourceMappingURL=download.js.map\n","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Mail, \r\n  Users, \r\n  Download, \r\n  Trash2, \r\n  Search, \r\n  Calendar,\r\n  Plus,\r\n  X,\r\n  RefreshCw\r\n} from 'lucide-react';\r\nimport api from '../../api/axios'; \r\n\r\n// Toast hook implementation\r\nconst useToast = () => {\r\n  const [toasts, setToasts] = useState([]);\r\n\r\n  const toast = ({ title, description, variant = 'default' }) => {\r\n    const id = Math.random().toString(36).substring(2, 9);\r\n    const newToast = { id, title, description, variant };\r\n    \r\n    setToasts((prev) => [...prev, newToast]);\r\n    \r\n    // Auto-dismiss after 5 seconds\r\n    setTimeout(() => {\r\n      setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n    }, 5000);\r\n  };\r\n\r\n  const removeToast = (id) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  return { toast, toasts, removeToast };\r\n};\r\n\r\n// Toast component\r\nconst Toast = ({ toast, onDismiss }) => {\r\n  const variantClasses = {\r\n    default: 'bg-white border border-gray-200 text-gray-800',\r\n    destructive: 'bg-red-100 border-red-200 text-red-800',\r\n    success: 'bg-green-100 border-green-200 text-green-800',\r\n    warning: 'bg-yellow-100 border-yellow-200 text-yellow-800',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${variantClasses[toast.variant || 'default']} rounded-md shadow-lg p-4 max-w-xs w-full relative mb-2`}\r\n      role=\"alert\"\r\n    >\r\n      <button\r\n        onClick={onDismiss}\r\n        className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700\"\r\n        aria-label=\"Dismiss toast\"\r\n      >\r\n        <X className=\"w-4 h-4\" />\r\n      </button>\r\n      <h3 className=\"font-medium pr-6\">{toast.title}</h3>\r\n      {toast.description && <p className=\"text-sm mt-1 pr-6\">{toast.description}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Newsletter service using your axios client - FIXED VERSION\r\nconst newsletterService = {\r\n  async fetchSubscribers(limit = null) {\r\n    try {\r\n      const params = {};\r\n      if (limit) params.limit = limit;\r\n\r\n      const response = await api.get('/admin/fetch-newsletter-subscribers', { params });\r\n      \r\n      if (response?.data?.code === 200) {\r\n        return {\r\n          success: true,\r\n          subscribers: response.data.newsletter_subscribers || [],\r\n          message: response.data.message || 'Subscribers fetched successfully!'\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          message: response?.data?.message || 'Failed to fetch subscribers'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Newsletter fetch subscribers error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.message || 'Network error. Please check your connection and try again.'\r\n      };\r\n    }\r\n  },\r\n\r\n  async addSubscriber(email) {\r\n    try {\r\n      if (!email || !email.trim()) {\r\n        return {\r\n          success: false,\r\n          message: 'Please enter a valid email address'\r\n        };\r\n      }\r\n\r\n      const cleanEmail = email.trim();\r\n      \r\n      // Basic email validation\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(cleanEmail)) {\r\n        return {\r\n          success: false,\r\n          message: 'Please enter a valid email address'\r\n        };\r\n      }\r\n\r\n      console.log('🔄 Attempting newsletter subscription for:', cleanEmail);\r\n\r\n      // FIXED: Send email as query parameter instead of request body\r\n      const response = await api.post(`/newsletter-subscribers/add?email=${encodeURIComponent(cleanEmail)}`);\r\n      \r\n      if (response?.data?.code === 200) {\r\n        return {\r\n          success: true,\r\n          message: response.data.message || 'Successfully subscribed to newsletter!'\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          message: response?.data?.message || 'Failed to subscribe. Please try again.'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Newsletter subscription error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.message || 'Network error. Please check your connection and try again.'\r\n      };\r\n    }\r\n  },\r\n\r\n  async removeSubscriber(email) {\r\n    try {\r\n      if (!email || !email.trim()) {\r\n        return {\r\n          success: false,\r\n          message: 'Please enter a valid email address'\r\n        };\r\n      }\r\n\r\n      const cleanEmail = email.trim();\r\n      \r\n      // Basic email validation\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(cleanEmail)) {\r\n        return {\r\n          success: false,\r\n          message: 'Please enter a valid email address'\r\n        };\r\n      }\r\n\r\n      console.log('🔄 Attempting newsletter unsubscription for:', cleanEmail);\r\n\r\n      // FIXED: Send email as query parameter instead of request body\r\n      const response = await api.post(`/newsletter-subscribers/remove?email=${encodeURIComponent(cleanEmail)}`);\r\n      \r\n      if (response?.data?.code === 200) {\r\n        return {\r\n          success: true,\r\n          message: response.data.message || 'Successfully unsubscribed!'\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          message: response?.data?.message || 'Failed to unsubscribe. Please try again.'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Newsletter unsubscribe error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.message || 'Network error. Please check your connection and try again.'\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nconst NewsletterAdmin = () => {\r\n  const [subscribers, setSubscribers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(''); \r\n  const [selectedSubscribers, setSelectedSubscribers] = useState([]);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [stats, setStats] = useState({\r\n    total: 0,\r\n    recent: 0,\r\n    thisMonth: 0\r\n  });\r\n  const { toast, toasts, removeToast } = useToast();\r\n\r\n  // Check authentication and fetch subscribers\r\n  useEffect(() => {\r\n    const token = api.getToken();\r\n    if (!token) {\r\n      toast({\r\n        title: 'Authentication Required',\r\n        description: 'Please login to access this page',\r\n        variant: 'destructive'\r\n      });\r\n      // Uncomment to redirect to login\r\n      // window.location.href = '/login';\r\n    } else {\r\n      fetchSubscribers();\r\n    }\r\n  }, []);\r\n\r\n  const fetchSubscribers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await newsletterService.fetchSubscribers();\r\n      if (result.success) {\r\n        const subscriberData = result.subscribers || [];\r\n        setSubscribers(subscriberData);\r\n        calculateStats(subscriberData);\r\n      } else {\r\n        toast({\r\n          title: 'Error',\r\n          description: result.message || 'Failed to fetch subscribers',\r\n          variant: 'destructive'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: error.message || 'Failed to fetch subscribers',\r\n        variant: 'destructive'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = (subscriberData) => {\r\n    const now = new Date();\r\n    const thisMonth = new Date(now.getFullYear(), now.getMonth(), 1);\r\n    const lastWeek = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n\r\n    setStats({\r\n      total: subscriberData.length,\r\n      recent: subscriberData.filter(sub => \r\n        new Date(sub.created_at) > lastWeek\r\n      ).length,\r\n      thisMonth: subscriberData.filter(sub => \r\n        new Date(sub.created_at) > thisMonth\r\n      ).length\r\n    });\r\n  };\r\n\r\n  const handleRemoveSubscriber = async (email) => {\r\n    if (!confirm(`Are you sure you want to remove ${email} from the newsletter?`)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await newsletterService.removeSubscriber(email);\r\n      if (result.success) {\r\n        setSubscribers(prev => prev.filter(sub => sub.email !== email));\r\n        const newData = subscribers.filter(sub => sub.email !== email);\r\n        calculateStats(newData);\r\n        toast({\r\n          title: 'Success',\r\n          description: result.message || 'Subscriber removed successfully!',\r\n          variant: 'success'\r\n        });\r\n      } else {\r\n        toast({\r\n          title: 'Error',\r\n          description: result.message || 'Failed to remove subscriber',\r\n          variant: 'destructive'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: error.message || 'Failed to remove subscriber',\r\n        variant: 'destructive'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemove = async () => {\r\n    if (selectedSubscribers.length === 0) {\r\n      toast({\r\n        title: 'Warning',\r\n        description: 'Please select subscribers to remove',\r\n        variant: 'warning'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!confirm(`Are you sure you want to remove ${selectedSubscribers.length} subscribers?`)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const results = await Promise.all(\r\n        selectedSubscribers.map(email => newsletterService.removeSubscriber(email))\r\n      );\r\n      \r\n      const allSuccess = results.every(result => result.success);\r\n      if (allSuccess) {\r\n        const newData = subscribers.filter(sub => !selectedSubscribers.includes(sub.email));\r\n        setSubscribers(newData);\r\n        calculateStats(newData);\r\n        setSelectedSubscribers([]);\r\n        toast({\r\n          title: 'Success',\r\n          description: `${selectedSubscribers.length} subscribers removed successfully!`,\r\n          variant: 'success'\r\n        });\r\n      } else {\r\n        const errorMessages = results.filter(r => !r.success).map(r => r.message);\r\n        toast({\r\n          title: 'Partial Error',\r\n          description: `Some subscribers could not be removed: ${errorMessages.join(', ')}`,\r\n          variant: 'destructive'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: error.message || 'Failed to remove subscribers',\r\n        variant: 'destructive'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddSubscriber = async (e) => {\r\n    e.preventDefault();\r\n    if (!newEmail.trim()) {\r\n      toast({\r\n        title: 'Warning',\r\n        description: 'Please enter an email address',\r\n        variant: 'warning'\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Check if email already exists\r\n    if (subscribers.some(sub => sub.email.toLowerCase() === newEmail.toLowerCase())) {\r\n      toast({\r\n        title: 'Warning',\r\n        description: 'This email is already subscribed',\r\n        variant: 'warning'\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await newsletterService.addSubscriber(newEmail);\r\n      if (result.success) {\r\n        const newSubscriber = {\r\n          email: newEmail,\r\n          created_at: new Date().toISOString()\r\n        };\r\n        const newData = [...subscribers, newSubscriber];\r\n        setSubscribers(newData);\r\n        calculateStats(newData);\r\n        setNewEmail('');\r\n        setShowAddModal(false);\r\n        toast({\r\n          title: 'Success',\r\n          description: result.message || 'Subscriber added successfully!',\r\n          variant: 'success'\r\n        });\r\n      } else {\r\n        toast({\r\n          title: 'Error',\r\n          description: result.message || 'Failed to add subscriber',\r\n          variant: 'destructive'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: error.message || 'Failed to add subscriber',\r\n        variant: 'destructive'\r\n      });\r\n    }\r\n  };\r\n\r\n  const exportSubscribers = () => {\r\n    try {\r\n      const csvContent = [\r\n        ['Email', 'Date Subscribed'],\r\n        ...subscribers.map(sub => [\r\n          sub.email,\r\n          formatDate(sub.created_at)\r\n        ])\r\n      ].map(row => row.join(',')).join('\\n');\r\n\r\n      const blob = new Blob([csvContent], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `newsletter_subscribers_${new Date().toISOString().split('T')[0]}.csv`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      toast({\r\n        title: 'Success',\r\n        description: 'Subscribers exported successfully!',\r\n        variant: 'success'\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to export subscribers',\r\n        variant: 'destructive'\r\n      });\r\n    }\r\n  };\r\n\r\n  const filteredSubscribers = subscribers.filter(subscriber =>\r\n    subscriber.email?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const toggleSelectAll = () => {\r\n    if (selectedSubscribers.length === filteredSubscribers.length && filteredSubscribers.length > 0) {\r\n      setSelectedSubscribers([]);\r\n    } else {\r\n      setSelectedSubscribers(filteredSubscribers.map(sub => sub.email));\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Unknown';\r\n    const date = new Date(dateString);\r\n    return isNaN(date.getTime()) ? 'Invalid Date' : date.toLocaleDateString();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-pink-500\"></div>\r\n        <span className=\"ml-3 text-gray-600\">Loading subscribers...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white rounded-lg shadow-sm min-h-screen bg-gray-50\">\r\n      {/* Toast Container */}\r\n      <div className=\"fixed top-4 right-4 z-50\">\r\n        {toasts.map((toastItem) => (\r\n          <Toast\r\n            key={toastItem.id}\r\n            toast={toastItem}\r\n            onDismiss={() => removeToast(toastItem.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6 gap-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Mail className=\"w-6 h-6 text-pink-500\" />\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Newsletter Subscribers</h1>\r\n          </div>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            <button\r\n              onClick={() => setShowAddModal(true)}\r\n              className=\"flex items-center space-x-2 px-4 py-2 bg-pink-500 text-white rounded-lg hover:bg-pink-600 transition-colors\"\r\n            >\r\n              <Plus className=\"w-4 h-4\" />\r\n              <span>Add Subscriber</span>\r\n            </button>\r\n            <button\r\n              onClick={exportSubscribers}\r\n              className=\"flex items-center space-x-2 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n            >\r\n              <Download className=\"w-4 h-4\" />\r\n              <span>Export CSV</span>\r\n            </button>\r\n            <button\r\n              onClick={fetchSubscribers}\r\n              className=\"flex items-center space-x-2 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n            >\r\n              <RefreshCw className=\"w-4 h-4\" />\r\n              <span>Refresh</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-blue-600\">Total Subscribers</p>\r\n                <p className=\"text-2xl font-bold text-blue-900\">{stats.total}</p>\r\n              </div>\r\n              <Users className=\"w-8 h-8 text-blue-500\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-green-600\">This Month</p>\r\n                <p className=\"text-2xl font-bold text-green-900\">{stats.thisMonth}</p>\r\n              </div>\r\n              <Calendar className=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-purple-600\">Last 7 Days</p>\r\n                <p className=\"text-2xl font-bold text-purple-900\">{stats.recent}</p>\r\n              </div>\r\n              <Mail className=\"w-8 h-8 text-purple-500\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Bulk Actions */}\r\n        <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-4 gap-4\">\r\n          <div className=\"relative flex-1\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search subscribers...\"\r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n          {selectedSubscribers.length > 0 && (\r\n            <button\r\n              onClick={handleBulkRemove}\r\n              className=\"flex items-center space-x-2 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\r\n            >\r\n              <Trash2 className=\"w-4 h-4\" />\r\n              <span>Remove Selected ({selectedSubscribers.length})</span>\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Subscribers Table */}\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedSubscribers.length === filteredSubscribers.length && filteredSubscribers.length > 0}\r\n                      onChange={toggleSelectAll}\r\n                      className=\"rounded border-gray-300 text-pink-600 focus:ring-pink-500\"\r\n                    />\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date Subscribed</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredSubscribers.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan=\"4\" className=\"px-6 py-8 text-center text-gray-500\">\r\n                      {searchTerm ? 'No subscribers found matching your search.' : 'No subscribers yet.'}\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  filteredSubscribers.map((subscriber, index) => (\r\n                    <tr key={subscriber.email || index} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedSubscribers.includes(subscriber.email)}\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              setSelectedSubscribers(prev => [...prev, subscriber.email]);\r\n                            } else {\r\n                              setSelectedSubscribers(prev => prev.filter(email => email !== subscriber.email));\r\n                            }\r\n                          }}\r\n                          className=\"rounded border-gray-300 text-pink-600 focus:ring-pink-500\"\r\n                        />\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {subscriber.email}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {formatDate(subscriber.created_at)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        <button\r\n                          onClick={() => handleRemoveSubscriber(subscriber.email)}\r\n                          className=\"text-red-600 hover:text-red-800 transition-colors p-1\"\r\n                          title=\"Remove subscriber\"\r\n                        >\r\n                          <Trash2 className=\"w-5 h-5\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add Subscriber Modal */}\r\n        {showAddModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md\">\r\n              <div className=\"flex items-center justify-between p-4 border-b\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900\">Add New Subscriber</h2>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowAddModal(false);\r\n                    setNewEmail('');\r\n                  }}\r\n                  className=\"text-gray-400 hover:text-gray-500\"\r\n                >\r\n                  <X className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"p-4\">\r\n                <div className=\"mb-4\">\r\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Email Address\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    value={newEmail}\r\n                    onChange={(e) => setNewEmail(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500\"\r\n                    placeholder=\"Enter email address\"\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        handleAddSubscriber(e);\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-end space-x-3 pt-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setShowAddModal(false);\r\n                      setNewEmail('');\r\n                    }}\r\n                    className=\"px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={handleAddSubscriber}\r\n                    className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                  >\r\n                    Add Subscriber\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsletterAdmin;"],"names":["__iconNode","Download","createLucideIcon","useToast","toasts","setToasts","useState","title","description","variant","id","newToast","prev","toast","Toast","onDismiss","variantClasses","jsxs","jsx","X","newsletterService","limit","params","response","api","_a","_b","error","email","cleanEmail","NewsletterAdmin","subscribers","setSubscribers","loading","setLoading","searchTerm","setSearchTerm","selectedSubscribers","setSelectedSubscribers","showAddModal","setShowAddModal","newEmail","setNewEmail","stats","setStats","removeToast","useEffect","fetchSubscribers","result","subscriberData","calculateStats","now","thisMonth","lastWeek","sub","handleRemoveSubscriber","newData","handleBulkRemove","results","errorMessages","r","handleAddSubscriber","e","newSubscriber","exportSubscribers","csvContent","formatDate","row","blob","url","filteredSubscribers","subscriber","toggleSelectAll","dateString","date","toastItem","Mail","Plus","RefreshCw","Users","Calendar","Search","Trash2","index"],"mappings":"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","x_google_ignoreList":[0]}